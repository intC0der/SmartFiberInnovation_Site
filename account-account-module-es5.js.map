{"version":3,"sources":["webpack:///src/app/account/auth/steptwoverification/steptwoverification.component.ts","webpack:///src/app/account/auth/emailverification/emailverification.component.scss","webpack:///src/app/account/auth/login/login.component.scss","webpack:///src/app/account/auth/recoverpwd1/recoverpwd1.component.scss","webpack:///src/app/account/auth/lockscreen/lockscreen.component.html","webpack:///src/app/account/auth/register1/register1.component.html","webpack:///node_modules/ng-otp-input/__ivy_ngcc__/fesm2015/ng-otp-input.js","webpack:///src/app/account/auth/login/login.component.html","webpack:///src/app/account/auth/confirmmail/confirmmail.component.ts","webpack:///src/app/account/auth/login/login.component.ts","webpack:///src/app/account/auth/recoverpwd/recoverpwd.component.html","webpack:///src/app/account/auth/register/register.component.ts","webpack:///src/app/account/auth/login1/login1.component.scss","webpack:///src/app/account/auth/lockscreen/lockscreen.component.scss","webpack:///src/app/account/auth/recoverpwd/recoverpwd.component.scss","webpack:///src/app/account/auth/auth-routing.module.ts","webpack:///src/app/account/auth/confirmmail/confirmmail.component.html","webpack:///src/app/account/auth/register1/register1.component.ts","webpack:///src/app/account/auth/steptwoverification/steptwoverification.component.scss","webpack:///src/app/account/auth/emailverification/emailverification.component.ts","webpack:///src/app/account/auth/register/register.component.html","webpack:///src/app/account/auth/auth.module.ts","webpack:///src/app/account/auth/emailverification/emailverification.component.html","webpack:///src/app/core/services/user.service.ts","webpack:///src/app/account/auth/confirmmail/confirmmail.component.scss","webpack:///src/app/account/account.module.ts","webpack:///src/app/account/auth/recoverpwd1/recoverpwd1.component.ts","webpack:///src/app/account/auth/recoverpwd1/recoverpwd1.component.html","webpack:///src/app/account/auth/login1/login1.component.ts","webpack:///src/app/account/auth/recoverpwd/recoverpwd.component.ts","webpack:///src/app/account/account-routing.module.ts","webpack:///src/app/account/auth/register1/register1.component.scss","webpack:///src/app/account/auth/lockscreen/lockscreen.component.ts","webpack:///src/app/account/auth/steptwoverification/steptwoverification.component.html","webpack:///src/app/account/auth/login1/login1.component.html","webpack:///src/app/account/auth/register/register.component.scss"],"names":["SteptwoverificationComponent","year","Date","getFullYear","config","allowNumbersOnly","length","isPasswordInput","disableAutoFocus","placeholder","inputStyles","layout_mode","document","body","setAttribute","selector","template","NgOtpInputComponent_div_0_input_1_Template","rf","ctx","_r5","NgOtpInputComponent_div_0_input_1_Template_input_keydown_0_listener","$event","ctx_r4","onKeyDown","NgOtpInputComponent_div_0_input_1_Template_input_keyup_0_listener","restoredCtx","i_r3","index","ctx_r6","onKeyUp","item_r2","$implicit","ctx_r1","inputClass","componentKey","inputType","otpForm","controls","NgOtpInputComponent_div_0_Template","ctx_r0","containerClass","containerStyles","KeysPipe","value","Object","keys","ɵfac","KeysPipe_Factory","t","ɵpipe","name","type","pure","ngDevMode","args","Config","NgOtpInputComponent","keysPipe","onInputChange","inputControls","Array","Math","random","toString","substring","getTime","addControl","getControlName","getInputType","containerItem","getElementById","addEventListener","evt","handlePaste","ele","getElementsByClassName","focus","idx","event","ifKeyCode","key","targetCode","keyCode","charCode","isSpace","inputIdx","nextInputId","appendKey","prevInputId","ifRightArrow","setSelected","ifLeftArrow","isBackspace","ifBackspaceOrDelete","target","rebuildValue","ifValidEntry","id","eleId","focusTo","setSelectionRange","setTimeout","inp","String","fromCharCode","isMobile","test","navigator","userAgent","allowKeyCodes","includes","isNaN","reset","replace","from","forEach","c","get","setValue","indexOfElementToFocus","val","transform","k","emit","e","clipboardData","window","pastedData","getData","stopPropagation","preventDefault","NgOtpInputComponent_Factory","ɵcmp","selectors","inputs","outputs","decls","vars","consts","NgOtpInputComponent_Template","directives","NumberOnlyDirective","pipes","styles","ctorParameters","propDecorators","_elRef","_renderer","disabledNumberOnly","nativeElement","NumberOnlyDirective_Factory","ɵdir","NgOtpInputModule","NgOtpInputModule_Factory","ɵmod","ɵinj","providers","imports","declarations","exports","ngJitMode","ConfirmmailComponent","LoginComponent","formBuilder","route","router","authenticationService","authFackservice","submitted","error","currentUserValue","navigate","loginForm","group","email","required","password","returnUrl","snapshot","queryParams","invalid","defaultauth","login","f","then","res","pipe","subscribe","data","RegisterComponent","userService","successmsg","signupForm","username","register","routes","path","component","AuthRoutingModule","forChild","Register1Component","registerForm","minLength","EmailverificationComponent","AuthModule","UserProfileService","http","user","post","providedIn","AccountModule","Recoverpwd1Component","recoverForm","Login1Component","RecoverpwdComponent","success","resetForm","resetPassword","loadChildren","m","AccountRoutingModule","LockscreenComponent"],"mappings":"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","file":"account-account-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { LAYOUT_MODE } from '../../../layouts/layouts.model';\n\n@Component({\n  selector: 'app-steptwoverification',\n  templateUrl: './steptwoverification.component.html',\n  styleUrls: ['./steptwoverification.component.scss']\n})\n\n/**\n * Step-Two-Verification Component\n */\nexport class SteptwoverificationComponent implements OnInit {\n  layout_mode!: string;\n\n  // set the currenr year\n  year: number = new Date().getFullYear();\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.layout_mode = LAYOUT_MODE\n    if(this.layout_mode === 'dark') {\n      document.body.setAttribute(\"data-layout-mode\", \"dark\");\n    }\n  }\n\n  /***\n   * confirm otp\n   */\n  config = {\n    allowNumbersOnly: true,\n    length: 4,\n    isPasswordInput: false,\n    disableAutoFocus: false,\n    placeholder: '',\n    inputStyles: {\n      'width': '80px',\n      'height': '50px'\n    }\n  };\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJlbWFpbHZlcmlmaWNhdGlvbi5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsb2dpbi5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZWNvdmVycHdkMS5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"<div class=\\\"account-pages my-5 pt-sm-5\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-md-10\\\">\\n                <div class=\\\"text-center mb-5\\\">\\n                    <a routerLink=\\\"/\\\" class=\\\"auth-logo\\\">\\n                        <img src=\\\"assets/images/logo-dark.png\\\" alt=\\\"\\\" height=\\\"28\\\" class=\\\"auth-logo-dark\\\">\\n                        <img src=\\\"assets/images/logo-light.png\\\" alt=\\\"\\\" height=\\\"28\\\" class=\\\"auth-logo-light\\\">\\n                    </a>\\n                    <p class=\\\"font-size-15 text-muted mt-3\\\">Responsive <b>Bootstrap 5</b> Admin Dashboard</p>\\n                </div>\\n                <div class=\\\"card overflow-hidden\\\">\\n                    <div class=\\\"row g-0\\\">\\n                        <div class=\\\"col-lg-6\\\">\\n                            <div class=\\\"p-lg-5 p-4\\\">\\n\\n                                <div>\\n                                    <h5>Lock screen</h5>\\n                                    <p class=\\\"text-muted\\\">Enter your password to unlock the screen !</p>\\n                                </div>\\n\\n                                <div class=\\\"mt-4 pt-3\\\">\\n                                    <div class=\\\"user-thumb text-center mb-4\\\">\\n                                        <img src=\\\"assets/images/users/avatar-1.jpg\\\"\\n                                            class=\\\"rounded-circle img-thumbnail avatar-md\\\" alt=\\\"thumbnail\\\">\\n                                        <h5 class=\\\"font-size-15 mt-3\\\">Thomas Ortiz</h5>\\n                                    </div>\\n                                    <form action=\\\"index.html\\\">\\n\\n                                        <div class=\\\"mb-3\\\">\\n                                            <label for=\\\"userpassword\\\" class=\\\"fw-semibold\\\">Password</label>\\n                                            <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"userpassword\\\"\\n                                                placeholder=\\\"Enter password\\\">\\n                                        </div>\\n\\n                                        <div class=\\\"mt-4 text-end\\\">\\n                                            <button class=\\\"btn btn-primary w-md waves-effect waves-light\\\"\\n                                                type=\\\"submit\\\">Unlock</button>\\n                                        </div>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-lg-6\\\">\\n                            <div class=\\\"p-lg-5 p-4 bg-auth h-100 d-none d-lg-block\\\">\\n                                <div class=\\\"bg-overlay\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <!-- end card -->\\n                <div class=\\\"mt-5 text-center\\\">\\n                    <p>Not you ? return <a routerLink=\\\"/account/login1\\\" class=\\\"fw-semibold text-decoration-underline\\\">\\n                            Login\\n                        </a> </p>\\n                    <p>© {{year}} <b>Samply</b>. Crafted with <i class=\\\"mdi mdi-heart text-danger\\\"></i> by Pichforest\\n                    </p>\\n                </div>\\n            </div>\\n            <!-- end col -->\\n        </div>\\n        <!-- end row -->\\n    </div>\\n    <!-- end container -->\\n</div>\\n<!-- end account page -->\";","export default \"<div class=\\\"account-pages my-5 pt-sm-5\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-md-10\\\">\\n                <div class=\\\"text-center mb-5\\\">\\n                    <a routerLink=\\\"/\\\" class=\\\"auth-logo\\\">\\n                        <img src=\\\"assets/images/logo-dark.png\\\" alt=\\\"\\\" height=\\\"28\\\" class=\\\"auth-logo-dark\\\">\\n                        <img src=\\\"assets/images/logo-light.png\\\" alt=\\\"\\\" height=\\\"28\\\" class=\\\"auth-logo-light\\\">\\n                    </a>\\n                    <p class=\\\"font-size-15 text-muted mt-3\\\">Responsive <b>Bootstrap 5</b> Admin Dashboard</p>\\n                </div>\\n                <div class=\\\"card overflow-hidden\\\">\\n                    <div class=\\\"row g-0\\\">\\n                        <div class=\\\"col-lg-6\\\">\\n                            <div class=\\\"p-lg-5 p-4\\\">\\n\\n                                <div>\\n                                    <h5>Register account</h5>\\n                                    <p class=\\\"text-muted\\\">Get your free Samply account now.</p>\\n                                </div>\\n\\n                                <div class=\\\"mt-4 pt-3\\\">\\n                                    <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                                        <div class=\\\"mb-3\\\">\\n                                            <label class=\\\"fw-semibold\\\" for=\\\"useremail\\\">Email</label>\\n                                            <input type=\\\"email\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\"\\n                                                id=\\\"useremail\\\" placeholder=\\\"Enter email\\\"\\n                                                [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\">\\n                                            <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\n                                                <div *ngIf=\\\"f.email.errors.required\\\">Email is required</div>\\n                                                <div *ngIf=\\\"f.email.errors.email\\\">Email must be a valid email address\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n\\n                                        <div class=\\\"mb-3\\\">\\n                                            <label class=\\\"fw-semibold\\\" for=\\\"username\\\">Username</label>\\n                                            <input type=\\\"text\\\" formControlName=\\\"username\\\" class=\\\"form-control\\\"\\n                                                id=\\\"username\\\" placeholder=\\\"Enter username\\\"\\n                                                [ngClass]=\\\"{ 'is-invalid': submitted && f.username.errors }\\\">\\n                                            <div *ngIf=\\\"submitted && f.username.errors\\\" class=\\\"invalid-feedback\\\">\\n                                                <div *ngIf=\\\"f.username.errors.required\\\">Username Name is required</div>\\n                                            </div>\\n                                        </div>\\n\\n                                        <div class=\\\"mb-3\\\">\\n                                            <label class=\\\"fw-semibold\\\" for=\\\"userpassword\\\">Password</label>\\n                                            <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\"\\n                                                id=\\\"userpassword\\\" placeholder=\\\"Enter password\\\"\\n                                                [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\">\\n                                            <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\n                                                <div *ngIf=\\\"f.password.errors.required\\\">Password is required</div>\\n                                                <div *ngIf=\\\"f.password.errors.minlength\\\">Password must be at least 6\\n                                                    characters</div>\\n                                            </div>\\n                                        </div>\\n\\n                                        <div class=\\\"mt-4 text-end\\\">\\n                                            <button class=\\\"btn btn-primary w-md waves-effect waves-light\\\"\\n                                                type=\\\"submit\\\">Register</button>\\n                                        </div>\\n\\n                                        <div class=\\\"mt-4 text-center\\\">\\n                                            <p class=\\\"mb-0 text-muted\\\">By registering you agree to the Samply <a\\n                                                    href=\\\"javascript: void(0)\\\"\\n                                                    class=\\\"text-primary fw-semibold text-decoration-underline\\\">Terms of\\n                                                    Use</a></p>\\n                                        </div>\\n                                    </form>\\n                                </div>\\n\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-lg-6\\\">\\n                            <div class=\\\"p-lg-5 p-4 bg-auth h-100 d-none d-lg-block\\\">\\n                                <div class=\\\"bg-overlay\\\"></div>\\n\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <!-- end card -->\\n                <div class=\\\"mt-5 text-center\\\">\\n                    <p>Already have an account ? <a routerLink=\\\"/account/login1\\\"\\n                            class=\\\"fw-semibold text-decoration-underline\\\"> Login </a> </p>\\n                    <p>© {{year}} <b>Samply</b>. Crafted with <i class=\\\"mdi mdi-heart text-danger\\\"></i> by Pichforest\\n                    </p>\\n                </div>\\n            </div>\\n            <!-- end col -->\\n        </div>\\n        <!-- end row -->\\n    </div>\\n    <!-- end container -->\\n</div>\\n<!-- end account page -->\";","import { Pipe, EventEmitter, Component, Input, Output, Directive, ElementRef, Renderer2, NgModule } from '@angular/core';\nimport { FormGroup, FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/forms';\n\nfunction NgOtpInputComponent_div_0_input_1_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"input\", 3);\n    ɵngcc0.ɵɵlistener(\"keydown\", function NgOtpInputComponent_div_0_input_1_Template_input_keydown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(2); return ctx_r4.onKeyDown($event); })(\"keyup\", function NgOtpInputComponent_div_0_input_1_Template_input_keyup_0_listener($event) { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r5); const i_r3 = restoredCtx.index; const ctx_r6 = ɵngcc0.ɵɵnextContext(2); return ctx_r6.onKeyUp($event, i_r3); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"otp-input \", ctx_r1.config.inputClass, \"\");\n    ɵngcc0.ɵɵpropertyInterpolate2(\"id\", \"otp_\", i_r3, \"_\", ctx_r1.componentKey, \"\");\n    ɵngcc0.ɵɵproperty(\"pattern\", ctx_r1.config.allowNumbersOnly ? \"\\\\d*\" : \"\")(\"type\", ctx_r1.inputType)(\"placeholder\", (ctx_r1.config == null ? null : ctx_r1.config.placeholder) || \"\")(\"disabledNumberOnly\", !ctx_r1.config.allowNumbersOnly)(\"ngStyle\", ctx_r1.config.inputStyles)(\"formControl\", ctx_r1.otpForm.controls[item_r2]);\n} }\nfunction NgOtpInputComponent_div_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵtemplate(1, NgOtpInputComponent_div_0_input_1_Template, 1, 11, \"input\", 2);\n    ɵngcc0.ɵɵpipe(2, \"keys\");\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMapInterpolate1(\"wrapper \", ctx_r0.config.containerClass, \"\");\n    ɵngcc0.ɵɵpropertyInterpolate1(\"id\", \"c_\", ctx_r0.componentKey, \"\");\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ctx_r0.config.containerStyles);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ɵngcc0.ɵɵpipeBind1(2, 6, ctx_r0.otpForm == null ? null : ctx_r0.otpForm.controls));\n} }\nclass KeysPipe {\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    transform(value) {\r\n        return Object.keys(value);\r\n    }\r\n}\nKeysPipe.ɵfac = function KeysPipe_Factory(t) { return new (t || KeysPipe)(); };\nKeysPipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: \"keys\", type: KeysPipe, pure: true });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(KeysPipe, [{\n        type: Pipe,\n        args: [{\n                name: 'keys'\n            }]\n    }], null, null); })();\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass Config {\r\n}\r\nif (false) {\r\n    /** @type {?} */\r\n    Config.prototype.inputStyles;\r\n    /** @type {?} */\r\n    Config.prototype.containerStyles;\r\n    /** @type {?} */\r\n    Config.prototype.allowKeyCodes;\r\n    /** @type {?} */\r\n    Config.prototype.length;\r\n    /** @type {?} */\r\n    Config.prototype.allowNumbersOnly;\r\n    /** @type {?} */\r\n    Config.prototype.inputClass;\r\n    /** @type {?} */\r\n    Config.prototype.containerClass;\r\n    /** @type {?} */\r\n    Config.prototype.isPasswordInput;\r\n    /** @type {?} */\r\n    Config.prototype.disableAutoFocus;\r\n    /** @type {?} */\r\n    Config.prototype.placeholder;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NgOtpInputComponent {\r\n    /**\r\n     * @param {?} keysPipe\r\n     */\r\n    constructor(keysPipe) {\r\n        this.keysPipe = keysPipe;\r\n        this.config = { length: 4 };\r\n        // tslint:disable-next-line: no-output-on-prefix\r\n        this.onInputChange = new EventEmitter();\r\n        this.inputControls = new Array(this.config.length);\r\n        this.componentKey = Math.random()\r\n            .toString(36)\r\n            .substring(2) + new Date().getTime().toString(36);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        this.otpForm = new FormGroup({});\r\n        for (let index = 0; index < this.config.length; index++) {\r\n            this.otpForm.addControl(this.getControlName(index), new FormControl());\r\n        }\r\n        this.inputType = this.getInputType();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngAfterViewInit() {\r\n        if (!this.config.disableAutoFocus) {\r\n            /** @type {?} */\r\n            const containerItem = document.getElementById(`c_${this.componentKey}`);\r\n            if (containerItem) {\r\n                containerItem.addEventListener('paste', (/**\r\n                 * @param {?} evt\r\n                 * @return {?}\r\n                 */\r\n                (evt) => this.handlePaste(evt)));\r\n                /** @type {?} */\r\n                const ele = containerItem.getElementsByClassName('otp-input')[0];\r\n                if (ele && ele.focus) {\r\n                    ele.focus();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} idx\r\n     * @return {?}\r\n     */\r\n    getControlName(idx) {\r\n        return `ctrl_${idx}`;\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ifLeftArrow(event) {\r\n        return this.ifKeyCode(event, 37);\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ifRightArrow(event) {\r\n        return this.ifKeyCode(event, 39);\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ifBackspaceOrDelete(event) {\r\n        return (event.key === 'Backspace' ||\r\n            event.key === 'Delete' ||\r\n            this.ifKeyCode(event, 8) ||\r\n            this.ifKeyCode(event, 46));\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @param {?} targetCode\r\n     * @return {?}\r\n     */\r\n    ifKeyCode(event, targetCode) {\r\n        /** @type {?} */\r\n        const key = event.keyCode || event.charCode;\r\n        // tslint:disable-next-line: triple-equals\r\n        return key == targetCode ? true : false;\r\n    }\r\n    /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    onKeyDown($event) {\r\n        /** @type {?} */\r\n        var isSpace = this.ifKeyCode($event, 32);\r\n        if (isSpace) { // prevent space\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} $event\r\n     * @param {?} inputIdx\r\n     * @return {?}\r\n     */\r\n    onKeyUp($event, inputIdx) {\r\n        /** @type {?} */\r\n        const nextInputId = this.appendKey(`otp_${inputIdx + 1}`);\r\n        /** @type {?} */\r\n        const prevInputId = this.appendKey(`otp_${inputIdx - 1}`);\r\n        if (this.ifRightArrow($event)) {\r\n            this.setSelected(nextInputId);\r\n            return;\r\n        }\r\n        if (this.ifLeftArrow($event)) {\r\n            this.setSelected(prevInputId);\r\n            return;\r\n        }\r\n        /** @type {?} */\r\n        const isBackspace = this.ifBackspaceOrDelete($event);\r\n        if (isBackspace && !$event.target.value) {\r\n            this.setSelected(prevInputId);\r\n            this.rebuildValue();\r\n            return;\r\n        }\r\n        if (!$event.target.value) {\r\n            return;\r\n        }\r\n        if (this.ifValidEntry($event)) {\r\n            this.setSelected(nextInputId);\r\n        }\r\n        this.rebuildValue();\r\n    }\r\n    /**\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    appendKey(id) {\r\n        return `${id}_${this.componentKey}`;\r\n    }\r\n    /**\r\n     * @param {?} eleId\r\n     * @return {?}\r\n     */\r\n    setSelected(eleId) {\r\n        this.focusTo(eleId);\r\n        /** @type {?} */\r\n        const ele = document.getElementById(eleId);\r\n        if (ele && ele.setSelectionRange) {\r\n            setTimeout((/**\r\n             * @return {?}\r\n             */\r\n            () => {\r\n                ele.setSelectionRange(0, 1);\r\n            }), 0);\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ifValidEntry(event) {\r\n        /** @type {?} */\r\n        const inp = String.fromCharCode(event.keyCode);\r\n        /** @type {?} */\r\n        const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n        return (isMobile ||\r\n            /[a-zA-Z0-9-_]/.test(inp) ||\r\n            (this.config.allowKeyCodes &&\r\n                this.config.allowKeyCodes.includes(event.keyCode)) ||\r\n            (event.keyCode >= 96 && event.keyCode <= 105));\r\n    }\r\n    /**\r\n     * @param {?} eleId\r\n     * @return {?}\r\n     */\r\n    focusTo(eleId) {\r\n        /** @type {?} */\r\n        const ele = document.getElementById(eleId);\r\n        if (ele) {\r\n            ele.focus();\r\n        }\r\n    }\r\n    // method to set component value\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    setValue(value) {\r\n        if (this.config.allowNumbersOnly && isNaN(value)) {\r\n            return;\r\n        }\r\n        this.otpForm.reset();\r\n        if (!value) {\r\n            this.rebuildValue();\r\n            return;\r\n        }\r\n        value = value.toString().replace(/\\s/g, ''); // remove whitespace\r\n        Array.from(value).forEach((/**\r\n         * @param {?} c\r\n         * @param {?} idx\r\n         * @return {?}\r\n         */\r\n        (c, idx) => {\r\n            if (this.otpForm.get(this.getControlName(idx))) {\r\n                this.otpForm.get(this.getControlName(idx)).setValue(c);\r\n            }\r\n        }));\r\n        if (!this.config.disableAutoFocus) {\r\n            /** @type {?} */\r\n            const containerItem = document.getElementById(`c_${this.componentKey}`);\r\n            /** @type {?} */\r\n            var indexOfElementToFocus = value.length < this.config.length ? value.length : (this.config.length - 1);\r\n            /** @type {?} */\r\n            let ele = containerItem.getElementsByClassName('otp-input')[indexOfElementToFocus];\r\n            if (ele && ele.focus) {\r\n                ele.focus();\r\n            }\r\n        }\r\n        this.rebuildValue();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    rebuildValue() {\r\n        /** @type {?} */\r\n        let val = '';\r\n        this.keysPipe.transform(this.otpForm.controls).forEach((/**\r\n         * @param {?} k\r\n         * @return {?}\r\n         */\r\n        k => {\r\n            if (this.otpForm.controls[k].value) {\r\n                val += this.otpForm.controls[k].value;\r\n            }\r\n        }));\r\n        this.onInputChange.emit(val);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    getInputType() {\r\n        return this.config.isPasswordInput\r\n            ? 'password'\r\n            : this.config.allowNumbersOnly\r\n                ? 'tel'\r\n                : 'text';\r\n    }\r\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    handlePaste(e) {\r\n        // Get pasted data via clipboard API\r\n        /** @type {?} */\r\n        let clipboardData = e.clipboardData || window['clipboardData'];\r\n        if (clipboardData) {\r\n            /** @type {?} */\r\n            var pastedData = clipboardData.getData('Text');\r\n        }\r\n        // Stop data actually being pasted into div\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        if (!pastedData) {\r\n            return;\r\n        }\r\n        this.setValue(pastedData);\r\n    }\r\n}\nNgOtpInputComponent.ɵfac = function NgOtpInputComponent_Factory(t) { return new (t || NgOtpInputComponent)(ɵngcc0.ɵɵdirectiveInject(KeysPipe)); };\nNgOtpInputComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NgOtpInputComponent, selectors: [[\"ng-otp-input\"]], inputs: { config: \"config\" }, outputs: { onInputChange: \"onInputChange\" }, decls: 1, vars: 1, consts: [[3, \"class\", \"id\", \"ngStyle\", 4, \"ngIf\"], [3, \"id\", \"ngStyle\"], [\"numberOnly\", \"\", \"maxlength\", \"1\", \"autocomplete\", \"off\", 3, \"pattern\", \"type\", \"placeholder\", \"disabledNumberOnly\", \"ngStyle\", \"class\", \"formControl\", \"id\", \"keydown\", \"keyup\", 4, \"ngFor\", \"ngForOf\"], [\"numberOnly\", \"\", \"maxlength\", \"1\", \"autocomplete\", \"off\", 3, \"pattern\", \"type\", \"placeholder\", \"disabledNumberOnly\", \"ngStyle\", \"formControl\", \"id\", \"keydown\", \"keyup\"]], template: function NgOtpInputComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NgOtpInputComponent_div_0_Template, 3, 8, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.otpForm == null ? null : ctx.otpForm.controls);\n    } }, directives: function () { return [ɵngcc1.NgIf, ɵngcc1.NgStyle, ɵngcc1.NgForOf, ɵngcc2.DefaultValueAccessor, NumberOnlyDirective, ɵngcc2.MaxLengthValidator, ɵngcc2.PatternValidator, ɵngcc2.NgControlStatus, ɵngcc2.FormControlDirective]; }, pipes: function () { return [KeysPipe]; }, styles: [\".otp-input[_ngcontent-%COMP%]{width:50px;height:50px;border-radius:4px;border:1px solid #c5c5c5;text-align:center;font-size:32px}.wrapper[_ngcontent-%COMP%]   .otp-input[_ngcontent-%COMP%]:not(:last-child){margin-right:8px}@media screen and (max-width:767px){.otp-input[_ngcontent-%COMP%]{width:40px;font-size:24px;height:40px}}@media screen and (max-width:420px){.otp-input[_ngcontent-%COMP%]{width:30px;font-size:18px;height:30px}}\"] });\r\n/** @nocollapse */\r\nNgOtpInputComponent.ctorParameters = () => [\r\n    { type: KeysPipe }\r\n];\r\nNgOtpInputComponent.propDecorators = {\r\n    config: [{ type: Input }],\r\n    onInputChange: [{ type: Output }]\r\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgOtpInputComponent, [{\n        type: Component,\n        args: [{\n                // tslint:disable-next-line: component-selector\n                selector: 'ng-otp-input',\n                template: \"<div class=\\\"wrapper {{config.containerClass}}\\\" id=\\\"c_{{componentKey}}\\\" *ngIf=\\\"otpForm?.controls\\\"\\r\\n  [ngStyle]=\\\"config.containerStyles\\\">\\r\\n  <input [pattern]=\\\"config.allowNumbersOnly ? '\\\\\\\\d*' : ''\\\" [type]=\\\"inputType\\\" numberOnly [placeholder]=\\\"config?.placeholder || ''\\\"\\r\\n    [disabledNumberOnly]=\\\"!config.allowNumbersOnly\\\" [ngStyle]=\\\"config.inputStyles\\\" maxlength=\\\"1\\\"\\r\\n    class=\\\"otp-input {{config.inputClass}}\\\" autocomplete=\\\"off\\\" *ngFor=\\\"let item of otpForm?.controls | keys;let i=index\\\"\\r\\n    [formControl]=\\\"otpForm.controls[item]\\\" id=\\\"otp_{{i}}_{{componentKey}}\\\" (keydown)=\\\"onKeyDown($event)\\\"\\r\\n    (keyup)=\\\"onKeyUp($event,i)\\\">\\r\\n</div>\",\n                styles: [\".otp-input{width:50px;height:50px;border-radius:4px;border:1px solid #c5c5c5;text-align:center;font-size:32px}.wrapper .otp-input:not(:last-child){margin-right:8px}@media screen and (max-width:767px){.otp-input{width:40px;font-size:24px;height:40px}}@media screen and (max-width:420px){.otp-input{width:30px;font-size:18px;height:30px}}\"]\n            }]\n    }], function () { return [{ type: KeysPipe }]; }, { config: [{\n            type: Input\n        }], onInputChange: [{\n            type: Output\n        }] }); })();\r\nif (false) {\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.config;\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.onInputChange;\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.otpForm;\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.inputControls;\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.componentKey;\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.inputType;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NgOtpInputComponent.prototype.keysPipe;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NumberOnlyDirective {\r\n    /**\r\n     * @param {?} _elRef\r\n     * @param {?} _renderer\r\n     */\r\n    constructor(_elRef, _renderer) {\r\n        this._elRef = _elRef;\r\n        this._renderer = _renderer;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        if (!this.disabledNumberOnly) {\r\n            this._renderer.setAttribute(this._elRef.nativeElement, 'onkeypress', 'return (event.charCode >= 48 && event.charCode <= 57) || event.charCode == 0');\r\n        }\r\n    }\r\n}\nNumberOnlyDirective.ɵfac = function NumberOnlyDirective_Factory(t) { return new (t || NumberOnlyDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };\nNumberOnlyDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: NumberOnlyDirective, selectors: [[\"\", \"numberOnly\", \"\"]], inputs: { disabledNumberOnly: \"disabledNumberOnly\" } });\r\n/** @nocollapse */\r\nNumberOnlyDirective.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: Renderer2 }\r\n];\r\nNumberOnlyDirective.propDecorators = {\r\n    disabledNumberOnly: [{ type: Input }]\r\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NumberOnlyDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[numberOnly]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { disabledNumberOnly: [{\n            type: Input\n        }] }); })();\r\nif (false) {\r\n    /** @type {?} */\r\n    NumberOnlyDirective.prototype.disabledNumberOnly;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NumberOnlyDirective.prototype._elRef;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NumberOnlyDirective.prototype._renderer;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NgOtpInputModule {\r\n}\nNgOtpInputModule.ɵfac = function NgOtpInputModule_Factory(t) { return new (t || NgOtpInputModule)(); };\nNgOtpInputModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgOtpInputModule });\nNgOtpInputModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [KeysPipe], imports: [[\n            CommonModule,\n            FormsModule,\n            ReactiveFormsModule\n        ]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgOtpInputModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                    ReactiveFormsModule\n                ],\n                declarations: [NgOtpInputComponent, KeysPipe, NumberOnlyDirective],\n                exports: [NgOtpInputComponent],\n                providers: [KeysPipe]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgOtpInputModule, { declarations: function () { return [NgOtpInputComponent, KeysPipe, NumberOnlyDirective]; }, imports: function () { return [CommonModule,\n        FormsModule,\n        ReactiveFormsModule]; }, exports: function () { return [NgOtpInputComponent]; } }); })();\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { NgOtpInputModule, NgOtpInputComponent as ɵa, KeysPipe as ɵb, NumberOnlyDirective as ɵc };\n\n//# sourceMappingURL=ng-otp-input.js.map","export default \"<div class=\\\"account-pages my-5 pt-sm-5\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-md-10\\\">\\n                <div class=\\\"text-center mb-5\\\">\\n                    <a routerLink=\\\"/\\\" class=\\\"auth-logo\\\">\\n                        <img src=\\\"assets/images/logo-dark.png\\\" alt=\\\"\\\" height=\\\"28\\\" class=\\\"auth-logo-dark\\\">\\n                        <img src=\\\"assets/images/logo-light.png\\\" alt=\\\"\\\" height=\\\"28\\\" class=\\\"auth-logo-light\\\">\\n                    </a>\\n                    <p class=\\\"font-size-15 text-muted mt-3\\\">Responsive <b>Bootstrap 5</b> Admin Dashboard</p>\\n                </div>\\n                <div class=\\\"card overflow-hidden\\\">\\n                    <div class=\\\"row g-0\\\">\\n                        <div class=\\\"col-lg-6\\\">\\n                            <div class=\\\"p-lg-5 p-4\\\">\\n\\n                                <div>\\n                                    <h5>Welcome Back !</h5>\\n                                    <p class=\\\"text-muted\\\">Sign in to continue to Samply.</p>\\n                                </div>\\n\\n                                <div class=\\\"mt-4 pt-3\\\">\\n                                    <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n                                        <div class=\\\"mb-3\\\">\\n                                            <label for=\\\"email\\\" class=\\\"fw-semibold\\\">Email</label>\\n                                            <input type=\\\"text\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\"\\n                                                placeholder=\\\"Enter email\\\"\\n                                                [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\">\\n                                            <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\n                                                <div *ngIf=\\\"f.email.errors.required\\\">Email is required</div>\\n                                                <div *ngIf=\\\"f.email.errors.email\\\">Email must be a valid email address\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n\\n                                        <div class=\\\"mb-3 mb-4\\\">\\n                                            <label for=\\\"userpassword\\\" class=\\\"fw-semibold\\\">Password</label>\\n                                            <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\"\\n                                                id=\\\"userpassword\\\" placeholder=\\\"Enter password\\\"\\n                                                [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\">\\n                                            <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\n                                                <div *ngIf=\\\"f.email.errors.required\\\">Password is required</div>\\n                                            </div>\\n                                        </div>\\n\\n                                        <div class=\\\"row align-items-center\\\">\\n                                            <div class=\\\"col-6\\\">\\n                                                <div class=\\\"form-check\\\">\\n                                                    <input type=\\\"checkbox\\\" class=\\\"form-check-input font-size-16\\\"\\n                                                        id=\\\"remember-check\\\">\\n                                                    <label class=\\\"form-check-label\\\" for=\\\"remember-check\\\">Remember\\n                                                        me</label>\\n                                                </div>\\n                                            </div>\\n                                            <div class=\\\"col-6\\\">\\n                                                <div class=\\\"text-end\\\">\\n                                                    <button class=\\\"btn btn-primary w-md waves-effect waves-light\\\"\\n                                                        type=\\\"submit\\\">Log In</button>\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n\\n                                        <div class=\\\"mt-4\\\">\\n                                            <a routerLink=\\\"/account/recoverpwd\\\" class=\\\"text-muted\\\"><i\\n                                                    class=\\\"mdi mdi-lock me-1\\\"></i> Forgot your password?</a>\\n                                        </div>\\n                                    </form>\\n                                </div>\\n\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"col-lg-6\\\">\\n                            <div class=\\\"p-lg-5 p-4 bg-auth h-100 d-none d-lg-block\\\">\\n                                <div class=\\\"bg-overlay\\\"></div>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                </div>\\n                <!-- end card -->\\n                <div class=\\\"mt-5 text-center\\\">\\n                    <p>Don't have an account ? <a routerLink=\\\"/account/register\\\"\\n                            class=\\\"fw-semibold text-decoration-underline text-primary\\\"> Sign up </a> </p>\\n                    <p>© {{year}} <b>Samply</b>. Crafted with <i class=\\\"mdi mdi-heart text-danger\\\"></i> by Pichforest\\n                    </p>\\n                </div>\\n            </div>\\n            <!-- end col -->\\n        </div>\\n        <!-- end row -->\\n    </div>\\n    <!-- end container -->\\n</div>\\n<!-- end account page -->\";","import { Component, OnInit } from '@angular/core';\nimport { LAYOUT_MODE } from '../../../layouts/layouts.model';\n\n@Component({\n  selector: 'app-confirmmail',\n  templateUrl: './confirmmail.component.html',\n  styleUrls: ['./confirmmail.component.scss']\n})\n\n/**\n * Confirm-Mail Component\n */\nexport class ConfirmmailComponent implements OnInit {\n  layout_mode!: string;\n\n  // set the currenr year\n  year: number = new Date().getFullYear();\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.layout_mode = LAYOUT_MODE\n    if(this.layout_mode === 'dark') {\n      document.body.setAttribute(\"data-layout-mode\", \"dark\");\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { AuthenticationService } from '../../../core/services/auth.service';\nimport { AuthfakeauthenticationService } from '../../../core/services/authfake.service';\nimport { environment } from '../../../../environments/environment';\nimport { LAYOUT_MODE } from '../../../layouts/layouts.model';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\n\n/**\n * Login Component\n */\nexport class LoginComponent implements OnInit {\n  \n  layout_mode!: string;\n\n  // set the currenr year\n  year: number = new Date().getFullYear();\n  loginForm!: FormGroup;\n  submitted = false;\n  returnUrl!: string;\n  error = '';\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authenticationService: AuthenticationService,\n    private authFackservice: AuthfakeauthenticationService,\n  ) {\n    // redirect to home if already logged in\n    if (this.authenticationService.currentUserValue) {\n      this.router.navigate(['/']);\n    }\n  }\n\n  ngOnInit(): void {\n    this.layout_mode = LAYOUT_MODE\n    if(this.layout_mode === 'dark') {\n      document.body.setAttribute(\"data-layout-mode\", \"dark\");\n    }\n    //Validation Set\n    this.loginForm = this.formBuilder.group({\n      email: ['admin@pichforest.com', [Validators.required, Validators.email]],\n      password: ['123456', [Validators.required]],\n    });\n    // get return url from route parameters or default to '/'\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n  // convenience getter for easy access to form fields\n  get f() { return this.loginForm.controls; }\n  /**\n   * Form submit\n   */\n  onSubmit() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n      return;\n    } else {\n      if (environment.defaultauth === 'firebase') {\n        this.authenticationService.login(this.f.email.value, this.f.password.value).then((res: any) => {\n          this.router.navigate(['']);\n        })\n          .catch((error: string) => {\n            this.error = error ? error : '';\n          });\n      } else {\n        this.authFackservice.login(this.f.email.value, this.f.password.value)\n          .pipe(first())\n          .subscribe(\n            (data: any) => {\n              this.router.navigate(['']);\n            },\n            (error: string) => {\n              this.error = error ? error : '';\n            });\n      }\n    }\n  }\n\n}\n","export default \"<div class=\\\"account-pages my-5 pt-sm-5\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-md-10\\\">\\n                <div class=\\\"text-center mb-5\\\">\\n                    <a routerLink=\\\"/\\\" class=\\\"auth-logo\\\">\\n                        <img src=\\\"assets/images/logo-dark.png\\\" alt=\\\"\\\" height=\\\"28\\\" class=\\\"auth-logo-dark\\\">\\n                        <img src=\\\"assets/images/logo-light.png\\\" alt=\\\"\\\" height=\\\"28\\\" class=\\\"auth-logo-light\\\">\\n                    </a>\\n                    <p class=\\\"font-size-15 text-muted mt-3\\\">Responsive <b>Bootstrap 5</b> Admin Dashboard</p>\\n                </div>\\n                <div class=\\\"card overflow-hidden\\\">\\n                    <div class=\\\"row g-0\\\">\\n\\n                        <div class=\\\"col-lg-6\\\">\\n                            <div class=\\\"p-lg-5 p-4\\\">\\n                                <div>\\n                                    <h5>Reset Password</h5>\\n                                    <p class=\\\"text-muted\\\">Re-Password with Samply.</p>\\n                                </div>\\n                                <div class=\\\"mt-4 pt-3\\\">\\n                                    <div class=\\\"alert alert-success mb-4\\\" role=\\\"alert\\\">\\n                                        Enter your Email and instructions will be sent to you!\\n                                    </div>\\n\\n                                    <form [formGroup]=\\\"resetForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                                        <div class=\\\"mb-3\\\">\\n                                            <label class=\\\"fw-semibold\\\" for=\\\"useremail\\\">Email</label>\\n                                            <input type=\\\"email\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\"\\n                                                id=\\\"useremail\\\" placeholder=\\\"Enter email\\\"\\n                                                [ngClass]=\\\"{'is-invalid': submitted && f.email.errors }\\\">\\n                                            <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\n                                                <div *ngIf=\\\"f.email.errors.required\\\">Email is required</div>\\n                                            </div>\\n                                        </div>\\n\\n                                        <div class=\\\"mt-4 text-end\\\">\\n                                            <button class=\\\"btn btn-primary w-md waves-effect waves-light\\\"\\n                                                type=\\\"submit\\\">Reset</button>\\n                                        </div>\\n                                    </form>\\n                                </div>\\n\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-lg-6\\\">\\n                            <div class=\\\"p-lg-5 p-4 bg-auth h-100 d-none d-lg-block\\\">\\n                                <div class=\\\"bg-overlay\\\"></div>\\n\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <!-- end card -->\\n                <div class=\\\"mt-5 text-center\\\">\\n                    <p>Remember It ? <a routerLink=\\\"/account/login\\\" class=\\\"fw-semibold text-decoration-underline\\\"> Login\\n                        </a>\\n                    </p>\\n                    <p>© {{year}} <b>Samply</b>. Crafted with <i class=\\\"mdi mdi-heart text-danger\\\"></i> by Pichforest\\n                    </p>\\n                </div>\\n            </div>\\n            <!-- end col -->\\n        </div>\\n        <!-- end row -->\\n    </div>\\n    <!-- end container -->\\n</div>\\n<!-- end account page -->\";","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { environment } from '../../../../environments/environment';\nimport { AuthenticationService } from '../../../core/services/auth.service';\nimport { UserProfileService } from '../../../core/services/user.service';\nimport { LAYOUT_MODE } from '../../../layouts/layouts.model';\n\nimport { Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\n\n/**\n * Register Component\n */\nexport class RegisterComponent implements OnInit {\n  layout_mode!: string;\n\n  signupForm!: FormGroup;\n  submitted = false;\n  successmsg = false;\n  error = '';\n\n  // set the currenr year\n  year: number = new Date().getFullYear();\n\n  constructor(private formBuilder: FormBuilder,\n    private router: Router,\n    private authenticationService: AuthenticationService,\n    private userService: UserProfileService) { }\n\n  ngOnInit(): void {\n\n    this.layout_mode = LAYOUT_MODE\n    if(this.layout_mode === 'dark') {\n      document.body.setAttribute(\"data-layout-mode\", \"dark\");\n    }\n\n    // Validation Set\n    this.signupForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n    });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.signupForm.controls; }\n\n  /**\n   * On submit form\n   */\n  onSubmit() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.signupForm.invalid) {\n      return;\n    } else {\n      if (environment.defaultauth === 'firebase') {\n        this.authenticationService.register(this.f.email.value, this.f.password.value).then((res: any) => {\n          this.successmsg = true;\n          if (this.successmsg) {\n            this.router.navigate(['']);\n          }\n        })\n          .catch((error: string) => {\n            this.error = error ? error : '';\n          });\n      } else {\n        this.userService.register(this.signupForm.value)\n          .pipe(first())\n          .subscribe(\n            (data: any) => {\n              this.successmsg = true;\n              if (this.successmsg) {\n                this.router.navigate(['/account/login']);\n              }\n            },\n            (error: any) => {\n              this.error = error ? error : '';\n            });\n      }\n    }\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsb2dpbjEuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsb2Nrc2NyZWVuLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZWNvdmVycHdkLmNvbXBvbmVudC5zY3NzIn0= */\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { Login1Component } from './login1/login1.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { Register1Component } from './register1/register1.component';\r\nimport { RecoverpwdComponent } from './recoverpwd/recoverpwd.component';\r\nimport { Recoverpwd1Component } from './recoverpwd1/recoverpwd1.component';\r\nimport { LockscreenComponent } from './lockscreen/lockscreen.component';\r\nimport { ConfirmmailComponent } from './confirmmail/confirmmail.component';\r\nimport { EmailverificationComponent } from './emailverification/emailverification.component';\r\nimport { SteptwoverificationComponent } from './steptwoverification/steptwoverification.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent,\r\n  },\r\n  {\r\n    path: 'login1',\r\n    component: Login1Component,\r\n  },\r\n  {\r\n    path: 'register',\r\n    component: RegisterComponent,\r\n  },\r\n  {\r\n    path: 'register1',\r\n    component: Register1Component,\r\n  },\r\n  {\r\n    path: 'recoverpwd',\r\n    component: RecoverpwdComponent,\r\n  },\r\n  {\r\n    path: 'recoverpwd1',\r\n    component: Recoverpwd1Component,\r\n  },\r\n  {\r\n    path: 'lockscreen',\r\n    component: LockscreenComponent,\r\n  },\r\n  {\r\n    path: 'confirm-mail',\r\n    component: ConfirmmailComponent,\r\n  },\r\n  {\r\n    path: 'email-verification',\r\n    component: EmailverificationComponent,\r\n  },\r\n  {\r\n    path: 'two-step-verification',\r\n    component: SteptwoverificationComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AuthRoutingModule { }\r\n","export default \"<div class=\\\"account-pages my-5 pt-sm-5\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-12\\\">\\n                <div class=\\\"text-center mb-5 text-muted\\\">\\n                    <a routerLink=\\\"/\\\" class=\\\"auth-logo\\\">\\n                        <img src=\\\"assets/images/logo-dark.png\\\" alt=\\\"\\\" height=\\\"28\\\" class=\\\"auth-logo-dark\\\">\\n                        <img src=\\\"assets/images/logo-light.png\\\" alt=\\\"\\\" height=\\\"28\\\" class=\\\"auth-logo-light\\\">\\n                    </a>\\n                    <p class=\\\"mt-3 font-size-15\\\">Responsive <strong>Bootstrap 5</strong> Admin Dashboard</p>\\n                </div>\\n            </div>\\n        </div>\\n        <!-- end row -->\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-md-8 col-lg-6 col-xl-5\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-body\\\">\\n                        <div class=\\\"p-2\\\">\\n                            <div class=\\\"text-center\\\">\\n                                <div class=\\\"avatar-md mx-auto\\\">\\n                                    <div class=\\\"avatar-title rounded-circle bg-light\\\">\\n                                        <i class=\\\"bx bx-mail-send h1 mb-0 text-primary\\\"></i>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"p-2 mt-4\\\">\\n                                    <h4 class=\\\"fw-semibold\\\">Success !</h4>\\n                                    <p class=\\\"text-muted\\\"><strong>All good!</strong> Your invoice was sent to your\\n                                        email. You'll be notified when someone will open it.</p>\\n                                    <div class=\\\"mt-4\\\">\\n                                        <a routerLink=\\\"/\\\" class=\\\"btn btn-success\\\">Back to Home</a>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <!-- end card -->\\n                <div class=\\\"mt-5 text-center\\\">\\n                    <p>© {{year}} <b>Samply</b>. Crafted with <i class=\\\"mdi mdi-heart text-danger\\\"></i> by Pichforest\\n                    </p>\\n                </div>\\n            </div>\\n            <!-- end col -->\\n        </div>\\n        <!-- end row -->\\n    </div>\\n    <!-- end container -->\\n</div>\\n<!-- end account page -->\";","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { LAYOUT_MODE } from '../../../layouts/layouts.model';\n\n@Component({\n  selector: 'app-register1',\n  templateUrl: './register1.component.html',\n  styleUrls: ['./register1.component.scss']\n})\n\n/**\n * Register1 Component\n */\nexport class Register1Component implements OnInit {\n  layout_mode!: string;\n\n  // set the currenr year\n  year: number = new Date().getFullYear();\n  registerForm!: FormGroup;\n  submitted = false;\n\n  constructor(private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n\n    this.layout_mode = LAYOUT_MODE\n    if(this.layout_mode === 'dark') {\n      document.body.setAttribute(\"data-layout-mode\", \"dark\");\n    }\n\n    this.registerForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      username: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.registerForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzdGVwdHdvdmVyaWZpY2F0aW9uLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { LAYOUT_MODE } from '../../../layouts/layouts.model';\n\n@Component({\n  selector: 'app-emailverification',\n  templateUrl: './emailverification.component.html',\n  styleUrls: ['./emailverification.component.scss']\n})\n\n/**\n * Email Verification Component\n */\nexport class EmailverificationComponent implements OnInit {\n  layout_mode!: string;\n\n  // set the currenr year\n  year: number = new Date().getFullYear();\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.layout_mode = LAYOUT_MODE\n    if(this.layout_mode === 'dark') {\n      document.body.setAttribute(\"data-layout-mode\", \"dark\");\n    }\n  }\n\n}\n","export default \"<div class=\\\"account-pages my-5 pt-sm-5\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-md-10\\\">\\n                <div class=\\\"text-center mb-5\\\">\\n                    <a routerLink=\\\"/\\\" class=\\\"auth-logo\\\">\\n                        <img src=\\\"assets/images/logo-dark.png\\\" alt=\\\"\\\" height=\\\"28\\\" class=\\\"auth-logo-dark\\\">\\n                        <img src=\\\"assets/images/logo-light.png\\\" alt=\\\"\\\" height=\\\"28\\\" class=\\\"auth-logo-light\\\">\\n                    </a>\\n                    <p class=\\\"font-size-15 text-muted mt-3\\\">Responsive <b>Bootstrap 5</b> Admin Dashboard</p>\\n                </div>\\n                <div class=\\\"card overflow-hidden\\\">\\n                    <div class=\\\"row g-0\\\">\\n                        <div class=\\\"col-lg-6\\\">\\n                            <div class=\\\"p-lg-5 p-4\\\">\\n\\n                                <div>\\n                                    <h5>Register account</h5>\\n                                    <p class=\\\"text-muted\\\">Get your free Samply account now.</p>\\n                                </div>\\n\\n                                <div class=\\\"mt-4 pt-3\\\">\\n                                    <form [formGroup]=\\\"signupForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n                                        <div class=\\\"mb-3\\\">\\n                                            <label class=\\\"fw-semibold\\\" for=\\\"useremail\\\">Email</label>\\n                                            <input type=\\\"email\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\"\\n                                                id=\\\"useremail\\\" placeholder=\\\"Enter email\\\"\\n                                                [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\">\\n                                            <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\n                                                <div *ngIf=\\\"f.email.errors.required\\\">Email is required</div>\\n                                            </div>\\n                                        </div>\\n\\n                                        <div class=\\\"mb-3\\\">\\n                                            <label class=\\\"fw-semibold\\\" for=\\\"username\\\">Username</label>\\n                                            <input type=\\\"text\\\" formControlName=\\\"username\\\" class=\\\"form-control\\\"\\n                                                id=\\\"username\\\" placeholder=\\\"Enter username\\\"\\n                                                [ngClass]=\\\"{ 'is-invalid': submitted && f.username.errors }\\\">\\n                                            <div *ngIf=\\\"submitted && f.username.errors\\\" class=\\\"invalid-feedback\\\">\\n                                                <div *ngIf=\\\"f.username.errors.required\\\">Username is required</div>\\n                                            </div>\\n                                        </div>\\n\\n                                        <div class=\\\"mb-3\\\">\\n                                            <label class=\\\"fw-semibold\\\" for=\\\"userpassword\\\">Password</label>\\n                                            <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\"\\n                                                id=\\\"userpassword\\\" placeholder=\\\"Enter password\\\"\\n                                                [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\">\\n                                            <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\n                                                <div *ngIf=\\\"f.password.errors.required\\\">Password is required</div>\\n                                            </div>\\n                                        </div>\\n\\n                                        <div class=\\\"mt-4 text-end\\\">\\n                                            <button class=\\\"btn btn-primary w-md waves-effect waves-light\\\"\\n                                                type=\\\"submit\\\">Register</button>\\n                                        </div>\\n\\n                                        <div class=\\\"mt-4 text-center\\\">\\n                                            <p class=\\\"mb-0 text-muted\\\">By registering you agree to the Samply <a\\n                                                href=\\\"javascript: void(0)\\\"\\n                                                    class=\\\"text-primary fw-semibold text-decoration-underline\\\">Terms of\\n                                                    Use</a></p>\\n                                        </div>\\n                                    </form>\\n                                </div>\\n\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-lg-6\\\">\\n                            <div class=\\\"p-lg-5 p-4 bg-auth h-100 d-none d-lg-block\\\">\\n                                <div class=\\\"bg-overlay\\\"></div>\\n\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <!-- end card -->\\n                <div class=\\\"mt-5 text-center\\\">\\n                    <p>Already have an account ? <a routerLink=\\\"/account/login\\\"\\n                            class=\\\"fw-semibold text-decoration-underline\\\"> Login </a> </p>\\n                    <p>© {{year}} <b>Samply</b>. Crafted with <i class=\\\"mdi mdi-heart text-danger\\\"></i> by Pichforest\\n                    </p>\\n                </div>\\n            </div>\\n            <!-- end col -->\\n        </div>\\n        <!-- end row -->\\n    </div>\\n    <!-- end container -->\\n</div>\\n<!-- end account page -->\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { NgOtpInputModule } from  'ng-otp-input';\n\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { RecoverpwdComponent } from './recoverpwd/recoverpwd.component';\nimport { LockscreenComponent } from './lockscreen/lockscreen.component';\nimport { ConfirmmailComponent } from './confirmmail/confirmmail.component';\nimport { EmailverificationComponent } from './emailverification/emailverification.component';\nimport { SteptwoverificationComponent } from './steptwoverification/steptwoverification.component';\nimport { Login1Component } from './login1/login1.component';\nimport { Register1Component } from './register1/register1.component';\nimport { Recoverpwd1Component } from './recoverpwd1/recoverpwd1.component';\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    RegisterComponent,\n    RecoverpwdComponent,\n    LockscreenComponent,\n    ConfirmmailComponent,\n    EmailverificationComponent,\n    SteptwoverificationComponent,\n    Login1Component,\n    Register1Component,\n    Recoverpwd1Component\n  ],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    NgOtpInputModule\n  ]\n})\nexport class AuthModule { }\n","export default \"<div class=\\\"account-pages my-5 pt-sm-5\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-12\\\">\\n                <div class=\\\"text-center mb-5 text-muted\\\">\\n                    <a routerLink=\\\"/\\\" class=\\\"auth-logo\\\">\\n                        <img src=\\\"assets/images/logo-dark.png\\\" alt=\\\"\\\" height=\\\"28\\\" class=\\\"auth-logo-dark\\\">\\n                        <img src=\\\"assets/images/logo-light.png\\\" alt=\\\"\\\" height=\\\"28\\\" class=\\\"auth-logo-light\\\">\\n                    </a>\\n                    <p class=\\\"mt-3 font-size-15\\\">Responsive <b>Bootstrap 5</b> Admin Dashboard</p>\\n                </div>\\n            </div>\\n        </div>\\n        <!-- end row -->\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-md-8 col-lg-6 col-xl-5\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-body\\\">\\n                        <div class=\\\"p-2\\\">\\n                            <div class=\\\"text-center\\\">\\n\\n                                <div class=\\\"avatar-md mx-auto\\\">\\n                                    <div class=\\\"avatar-title rounded-circle bg-light\\\">\\n                                        <i class=\\\"bx bxs-envelope h1 mb-0 text-primary\\\"></i>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"p-2 mt-4\\\">\\n                                    <h4>Verify your email</h4>\\n                                    <p class=\\\"text-muted\\\">We have sent you verification email <span\\n                                            class=\\\"font-weight-semibold\\\">example@abc.com</span>, Please check it</p>\\n                                    <div class=\\\"mt-4\\\">\\n                                        <a routerLink=\\\"/\\\" class=\\\"btn btn-success w-md\\\">Verify email</a>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <!-- end card -->\\n                <div class=\\\"mt-5 text-center\\\">\\n                    <p>Did't receive an email ? <a routerLink=\\\"/account/email-verification\\\"\\n                            class=\\\"fw-semibold text-primary text-decoration-underline\\\">\\n                            Resend </a> </p>\\n                    <p>© {{year}} <b>Samply</b>. Crafted with <i class=\\\"mdi mdi-heart text-danger\\\"></i> by Pichforest\\n                    </p>\\n                </div>\\n            </div>\\n            <!-- end col -->\\n        </div>\\n        <!-- end row -->\\n    </div>\\n    <!-- end container -->\\n</div>\\n<!-- end account page -->\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { User } from '../models/auth.models';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UserProfileService {\r\n    constructor(private http: HttpClient) { }\r\n    /***\r\n     * Get All User\r\n     */\r\n    getAll() {\r\n        return this.http.get<User[]>(`api/users`);\r\n    }\r\n\r\n    /***\r\n     * Facked User Register\r\n     */\r\n    register(user: User) {\r\n        return this.http.post(`/users/register`, user);\r\n    }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb25maXJtbWFpbC5jb21wb25lbnQuc2NzcyJ9 */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AccountRoutingModule } from './account-routing.module';\nimport { AuthModule } from './auth/auth.module';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    AccountRoutingModule,\n    AuthModule\n  ]\n})\nexport class AccountModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { LAYOUT_MODE } from '../../../layouts/layouts.model';\n\n@Component({\n  selector: 'app-recoverpwd1',\n  templateUrl: './recoverpwd1.component.html',\n  styleUrls: ['./recoverpwd1.component.scss']\n})\n\n/**\n * Recover-Password1 Component\n */\nexport class Recoverpwd1Component implements OnInit {\n  layout_mode!: string;\n\n  // set the currenr year\n  year: number = new Date().getFullYear();\n  recoverForm!: FormGroup;\n  submitted = false;\n\n  constructor(private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.layout_mode = LAYOUT_MODE\n    if(this.layout_mode === 'dark') {\n      document.body.setAttribute(\"data-layout-mode\", \"dark\");\n    }\n    this.recoverForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]]\n    });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.recoverForm.controls; }\n\n  onSubmit() {\n      this.submitted = true;\n  }\n\n}\n","export default \"<div class=\\\"account-pages my-5 pt-sm-5\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-md-10\\\">\\n                <div class=\\\"text-center mb-5\\\">\\n                    <a routerLink=\\\"/\\\" class=\\\"auth-logo\\\">\\n                        <img src=\\\"assets/images/logo-dark.png\\\" alt=\\\"\\\" height=\\\"28\\\" class=\\\"auth-logo-dark\\\">\\n                        <img src=\\\"assets/images/logo-light.png\\\" alt=\\\"\\\" height=\\\"28\\\" class=\\\"auth-logo-light\\\">\\n                    </a>\\n                    <p class=\\\"font-size-15 text-muted mt-3\\\">Responsive <b>Bootstrap 5</b> Admin Dashboard</p>\\n                </div>\\n                <div class=\\\"card overflow-hidden\\\">\\n                    <div class=\\\"row g-0\\\">\\n\\n                        <div class=\\\"col-lg-6\\\">\\n                            <div class=\\\"p-lg-5 p-4\\\">\\n                                <div>\\n                                    <h5>Reset Password</h5>\\n                                    <p class=\\\"text-muted\\\">Re-Password with Samply.</p>\\n                                </div>\\n                                <div class=\\\"mt-4 pt-3\\\">\\n                                    <div class=\\\"alert alert-success mb-4\\\" role=\\\"alert\\\">\\n                                        Enter your Email and instructions will be sent to you!\\n                                    </div>\\n                                    <form [formGroup]=\\\"recoverForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                                        <div class=\\\"mb-3\\\">\\n                                            <label class=\\\"fw-semibold\\\" for=\\\"useremail\\\">Email</label>\\n                                            <input type=\\\"email\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" id=\\\"useremail\\\"\\n                                                placeholder=\\\"Enter email\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\">\\n                                                <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\n                                                    <div *ngIf=\\\"f.email.errors.required\\\">Email is required</div>\\n                                                    <div *ngIf=\\\"f.email.errors.email\\\">Email must be a valid email address</div>\\n                                                </div>\\n                                        </div>\\n\\n                                        <div class=\\\"mt-4 text-end\\\">\\n                                            <button class=\\\"btn btn-primary w-md waves-effect waves-light\\\"\\n                                                type=\\\"submit\\\">Reset</button>\\n                                        </div>\\n                                    </form>\\n                                </div>\\n\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-lg-6\\\">\\n                            <div class=\\\"p-lg-5 p-4 bg-auth h-100 d-none d-lg-block\\\">\\n                                <div class=\\\"bg-overlay\\\"></div>\\n\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <!-- end card -->\\n                <div class=\\\"mt-5 text-center\\\">\\n                    <p>Remember It ? <a routerLink=\\\"/account/login1\\\" class=\\\"fw-semibold text-decoration-underline\\\">\\n                            Login\\n                        </a>\\n                    </p>\\n                    <p>© {{year}} <b>Samply</b>. Crafted with <i class=\\\"mdi mdi-heart text-danger\\\"></i> by Pichforest\\n                    </p>\\n                </div>\\n            </div>\\n            <!-- end col -->\\n        </div>\\n        <!-- end row -->\\n    </div>\\n    <!-- end container -->\\n</div>\\n<!-- end account page -->\";","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { LAYOUT_MODE } from '../../../layouts/layouts.model';\n\n@Component({\n  selector: 'app-login1',\n  templateUrl: './login1.component.html',\n  styleUrls: ['./login1.component.scss']\n})\n\n/**\n * Login1 Component\n */\nexport class Login1Component implements OnInit {\n  layout_mode!: string;\n\n  // set the currenr year\n  year: number = new Date().getFullYear();\n  loginForm!: FormGroup;\n  submitted = false;\n\n  constructor(private formBuilder: FormBuilder) { }\n  \n  ngOnInit(): void {\n    this.layout_mode = LAYOUT_MODE\n    if(this.layout_mode === 'dark') {\n      document.body.setAttribute(\"data-layout-mode\", \"dark\");\n    }\n    //Validation Set\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.loginForm.controls; }\n   \n  /**\n  * Bootsrap validation form submit method\n  */\n  onSubmit() {\n      this.submitted = true;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { environment } from '../../../../environments/environment';\nimport { AuthenticationService } from '../../../core/services/auth.service';\nimport { LAYOUT_MODE } from '../../../layouts/layouts.model';\n\n@Component({\n  selector: 'app-recoverpwd',\n  templateUrl: './recoverpwd.component.html',\n  styleUrls: ['./recoverpwd.component.scss']\n})\n\n/**\n * Recover-Password Component\n */\nexport class RecoverpwdComponent implements OnInit {\n\n  resetForm!: FormGroup;\n  layout_mode!: string;\n\n  // set the currenr year\n  year: number = new Date().getFullYear();\n  submitted = false;\n  error = '';\n  success = '';\n\n  constructor(private formBuilder: FormBuilder, private authenticationService: AuthenticationService) { }\n\n  ngOnInit(): void {\n    this.layout_mode = LAYOUT_MODE\n    if(this.layout_mode === 'dark') {\n      document.body.setAttribute(\"data-layout-mode\", \"dark\");\n    }\n    //Validation set\n    this.resetForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n    });\n  }\n  // convenience getter for easy access to form fields\n  get f() { return this.resetForm.controls; }\n  /**\n   * On submit form\n   */\n  onSubmit() {\n    this.success = '';\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.resetForm.invalid) {\n      return;\n    }\n    if (environment.defaultauth === 'firebase') {\n      this.authenticationService.resetPassword(this.f.email.value)\n        .catch(error => {\n          this.error = error ? error : '';\n        });\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  { path: 'auth', loadChildren: () => import('./auth/auth.module').then(m => m.AuthModule) }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AccountRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZWdpc3RlcjEuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { LAYOUT_MODE } from '../../../layouts/layouts.model';\n\n@Component({\n  selector: 'app-lockscreen',\n  templateUrl: './lockscreen.component.html',\n  styleUrls: ['./lockscreen.component.scss']\n})\n\n/**\n * Lock-Screen Component\n */\nexport class LockscreenComponent implements OnInit {\n\n  layout_mode!: string;\n\n  // set the currenr year\n  year: number = new Date().getFullYear();\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.layout_mode = LAYOUT_MODE\n    if(this.layout_mode === 'dark') {\n      document.body.setAttribute(\"data-layout-mode\", \"dark\");\n    }\n  }\n\n}\n","export default \"<div class=\\\"account-pages my-5 pt-sm-5\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-12\\\">\\n                <div class=\\\"text-center mb-5 text-muted\\\">\\n                    <a routerLink=\\\"/\\\" class=\\\"auth-logo\\\">\\n                        <img src=\\\"assets/images/logo-dark.png\\\" alt=\\\"\\\" height=\\\"28\\\" class=\\\"auth-logo-dark\\\">\\n                        <img src=\\\"assets/images/logo-light.png\\\" alt=\\\"\\\" height=\\\"28\\\" class=\\\"auth-logo-light\\\">\\n                    </a>\\n                    <p class=\\\"font-size-15 text-muted mt-3\\\">Responsive <b>Bootstrap 5</b> Admin Dashboard</p>\\n                </div>\\n            </div>\\n        </div>\\n        <!-- end row -->\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-md-8 col-lg-6 col-xl-5\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-body\\\">\\n                        <div class=\\\"p-2\\\">\\n                            <div class=\\\"text-center\\\">\\n                                <div class=\\\"avatar-md mx-auto\\\">\\n                                    <div class=\\\"avatar-title rounded-circle bg-light\\\">\\n                                        <i class=\\\"bx bxs-envelope h1 mb-0 text-primary\\\"></i>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"p-2 mt-4\\\">\\n                                    <h4>Verify your email</h4>\\n                                    <p class=\\\"mb-5 text-muted\\\">Please enter the 4 digit code sent to <span\\n                                            class=\\\"font-weight-semibold\\\">example@abc.com</span></p>\\n                                    <form>\\n                                        <ng-otp-input [config]=\\\"config\\\"></ng-otp-input>\\n                                    </form>\\n\\n                                    <div class=\\\"mt-4\\\">\\n                                        <a routerLink=\\\"/\\\" class=\\\"btn btn-success w-md\\\">Confirm</a>\\n                                    </div>\\n                                </div>\\n\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                </div>\\n                <!-- end card -->\\n                <div class=\\\"mt-5 text-center\\\">\\n                    <p>Did't receive a code ? <a routerLink=\\\"/account/two-step-verification\\\"\\n                            class=\\\"fw-semibold text-decoration-underline text-primary\\\">\\n                            Resend </a> </p>\\n                    <p>© {{year}} <b>Samply</b>. Crafted with <i class=\\\"mdi mdi-heart text-danger\\\"></i> by Pichforest\\n                    </p>\\n                </div>\\n            </div>\\n            <!-- end col -->\\n        </div>\\n        <!-- end row -->\\n    </div>\\n    <!-- end container -->\\n</div>\\n<!-- end account page -->\";","export default \"<div class=\\\"account-pages my-5 pt-sm-5\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-md-10\\\">\\n                <div class=\\\"text-center mb-5\\\">\\n                    <a routerLink=\\\"/\\\" class=\\\"auth-logo\\\">\\n                        <img src=\\\"assets/images/logo-dark.png\\\" alt=\\\"\\\" height=\\\"28\\\" class=\\\"auth-logo-dark\\\">\\n                        <img src=\\\"assets/images/logo-light.png\\\" alt=\\\"\\\" height=\\\"28\\\" class=\\\"auth-logo-light\\\">\\n                    </a>\\n                    <p class=\\\"font-size-15 text-muted mt-3\\\">Responsive <b>Bootstrap 5</b> Admin Dashboard</p>\\n                </div>\\n                <div class=\\\"card overflow-hidden\\\">\\n                    <div class=\\\"row g-0\\\">\\n                        <div class=\\\"col-lg-6\\\">\\n                            <div class=\\\"p-lg-5 p-4\\\">\\n\\n                                <div>\\n                                    <h5>Welcome Back !</h5>\\n                                    <p class=\\\"text-muted\\\">Sign in to continue to Samply.</p>\\n                                </div>\\n\\n                                <div class=\\\"mt-4 pt-3\\\">\\n                                    <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                                        <div class=\\\"mb-3\\\">\\n                                            <label for=\\\"email\\\" class=\\\"fw-semibold\\\">Email</label>\\n                                            <input type=\\\"text\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\"\\n                                                placeholder=\\\"Enter email\\\"\\n                                                [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\">\\n                                            <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\n                                                <div *ngIf=\\\"f.email.errors.required\\\">Email is required</div>\\n                                                <div *ngIf=\\\"f.email.errors.email\\\">Email must be a valid email address\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n\\n                                        <div class=\\\"mb-3 mb-4\\\">\\n                                            <label for=\\\"userpassword\\\" class=\\\"fw-semibold\\\">Password</label>\\n                                            <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\"\\n                                                id=\\\"userpassword\\\" placeholder=\\\"Enter password\\\"\\n                                                [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\">\\n                                            <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\n                                                <div *ngIf=\\\"f.email.errors.required\\\">Password is required</div>\\n                                            </div>\\n                                        </div>\\n\\n                                        <div class=\\\"row align-items-center\\\">\\n                                            <div class=\\\"col-6\\\">\\n                                                <div class=\\\"form-check\\\">\\n                                                    <input type=\\\"checkbox\\\" class=\\\"form-check-input font-size-16\\\"\\n                                                        id=\\\"remember-check\\\">\\n                                                    <label class=\\\"form-check-label\\\" for=\\\"remember-check\\\">Remember\\n                                                        me</label>\\n                                                </div>\\n                                            </div>\\n                                            <div class=\\\"col-6\\\">\\n                                                <div class=\\\"text-end\\\">\\n                                                    <button class=\\\"btn btn-primary w-md waves-effect waves-light\\\"\\n                                                        type=\\\"submit\\\">Log In</button>\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n\\n                                        <div class=\\\"mt-4\\\">\\n                                            <a routerLink=\\\"/account/recoverpwd\\\" class=\\\"text-muted\\\"><i\\n                                                    class=\\\"mdi mdi-lock me-1\\\"></i> Forgot your password?</a>\\n                                        </div>\\n                                    </form>\\n                                </div>\\n\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"col-lg-6\\\">\\n                            <div class=\\\"p-lg-5 p-4 bg-auth h-100 d-none d-lg-block\\\">\\n                                <div class=\\\"bg-overlay\\\"></div>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                </div>\\n                <!-- end card -->\\n                <div class=\\\"mt-5 text-center\\\">\\n                    <p>Don't have an account ? <a routerLink=\\\"/account/register1\\\"\\n                            class=\\\"fw-semibold text-decoration-underline text-primary\\\"> Sign up </a> </p>\\n                    <p>© {{year}} <b>Samply</b>. Crafted with <i class=\\\"mdi mdi-heart text-danger\\\"></i> by Pichforest\\n                    </p>\\n                </div>\\n            </div>\\n            <!-- end col -->\\n        </div>\\n        <!-- end row -->\\n    </div>\\n    <!-- end container -->\\n</div>\\n<!-- end account page -->\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZWdpc3Rlci5jb21wb25lbnQuc2NzcyJ9 */\";"]}