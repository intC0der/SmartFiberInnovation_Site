{"version":3,"sources":["./src/app/account/auth/steptwoverification/steptwoverification.component.ts","./src/app/account/auth/emailverification/emailverification.component.scss","./src/app/account/auth/login/login.component.scss","./src/app/account/auth/recoverpwd1/recoverpwd1.component.scss","./src/app/account/auth/lockscreen/lockscreen.component.html","./src/app/account/auth/register1/register1.component.html","./node_modules/ng-otp-input/__ivy_ngcc__/fesm2015/ng-otp-input.js","./src/app/account/auth/login/login.component.html","./src/app/account/auth/confirmmail/confirmmail.component.ts","./src/app/account/auth/login/login.component.ts","./src/app/account/auth/recoverpwd/recoverpwd.component.html","./src/app/account/auth/register/register.component.ts","./src/app/account/auth/login1/login1.component.scss","./src/app/account/auth/lockscreen/lockscreen.component.scss","./src/app/account/auth/recoverpwd/recoverpwd.component.scss","./src/app/account/auth/auth-routing.module.ts","./src/app/account/auth/confirmmail/confirmmail.component.html","./src/app/account/auth/register1/register1.component.ts","./src/app/account/auth/steptwoverification/steptwoverification.component.scss","./src/app/account/auth/emailverification/emailverification.component.ts","./src/app/account/auth/register/register.component.html","./src/app/account/auth/auth.module.ts","./src/app/account/auth/emailverification/emailverification.component.html","./src/app/core/services/user.service.ts","./src/app/account/auth/confirmmail/confirmmail.component.scss","./src/app/account/account.module.ts","./src/app/account/auth/recoverpwd1/recoverpwd1.component.ts","./src/app/account/auth/recoverpwd1/recoverpwd1.component.html","./src/app/account/auth/login1/login1.component.ts","./src/app/account/auth/recoverpwd/recoverpwd.component.ts","./src/app/account/account-routing.module.ts","./src/app/account/auth/register1/register1.component.scss","./src/app/account/auth/lockscreen/lockscreen.component.ts","./src/app/account/auth/steptwoverification/steptwoverification.component.html","./src/app/account/auth/login1/login1.component.html","./src/app/account/auth/register/register.component.scss"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAkD;AACW;IAWhD,4BAA4B,SAA5B,4BAA4B;IAMvC;QAHA,uBAAuB;QACvB,SAAI,GAAW,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAWxC;;WAEG;QACH,WAAM,GAAG;YACP,gBAAgB,EAAE,IAAI;YACtB,MAAM,EAAE,CAAC;YACT,eAAe,EAAE,KAAK;YACtB,gBAAgB,EAAE,KAAK;YACvB,WAAW,EAAE,EAAE;YACf,WAAW,EAAE;gBACX,OAAO,EAAE,MAAM;gBACf,QAAQ,EAAE,MAAM;aACjB;SACF,CAAC;IAtBc,CAAC;IAEjB,QAAQ;QACN,IAAI,CAAC,WAAW,GAAG,kEAAW;QAC9B,IAAG,IAAI,CAAC,WAAW,KAAK,MAAM,EAAE;YAC9B,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,kBAAkB,EAAE,MAAM,CAAC,CAAC;SACxD;IACH,CAAC;CAiBF;;AA9BY,4BAA4B;IATxC,+DAAS,CAAC;QACT,QAAQ,EAAE,yBAAyB;QACnC,gGAAmD;;KAEpD,CAAC;IAEF;;OAEG;GACU,4BAA4B,CA8BxC;AA9BwC;;;;;;;;;;;;;ACZzC;AAAe,6GAA8C,uIAAuI,E;;;;;;;;;;;;ACApM;AAAe,6GAA8C,uHAAuH,E;;;;;;;;;;;;ACApL;AAAe,6GAA8C,+HAA+H,E;;;;;;;;;;;;ACA5L;AAAe,4qGAA6mG,MAAM,gTAAgT,E;;;;;;;;;;;;ACAl7G;AAAe,wvDAAyrD,4CAA4C,67BAA67B,+CAA+C,syBAAsyB,+CAA+C,8kEAA8kE,MAAM,gTAAgT,E;;;;;;;;;;;;ACAz7L;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyH;AAC/B;AAC3C;;AAE/C;AACA;AACA,cAAc,wGAAwG;AACtH;AACwC;AACE;AACD;;AAEzC,8DAA8D;AAC9D,gBAAgB,8DAAuB;AACvC,IAAI,4DAAqB;AACzB,IAAI,wDAAiB,kGAAkG,CAAC,2DAAoB,MAAM,gBAAgB,2DAAoB,IAAI,iCAAiC,EAAE,+FAA+F,qBAAqB,2DAAoB,MAAM,gCAAgC,gBAAgB,2DAAoB,IAAI,qCAAqC,EAAE;AAC1d,IAAI,0DAAmB;AACvB,CAAC;AACD;AACA;AACA,mBAAmB,2DAAoB;AACvC,IAAI,oEAA6B;AACjC,IAAI,oEAA6B;AACjC,IAAI,wDAAiB;AACrB,CAAC;AACD,sDAAsD;AACtD,IAAI,4DAAqB;AACzB,IAAI,wDAAiB;AACrB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,oEAA6B;AACjC,IAAI,oEAA6B;AACjC,IAAI,wDAAiB;AACrB,IAAI,uDAAgB;AACpB,IAAI,wDAAiB,YAAY,yDAAkB;AACnD,CAAC;AACD;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,8CAA8C,8BAA8B;AAC5E,+BAA+B,0DAAmB,EAAE,2CAA2C;AAC/F,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,kDAAI;AAClB;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,WAAW,EAqBV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,uBAAuB;AACvB;AACA,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,2BAA2B,wDAAS,GAAG;AACvC,2BAA2B,4BAA4B;AACvD,oEAAoE,0DAAW;AAC/E;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,+DAA+D,kBAAkB;AACjF;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,IAAI;AAC3B;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,kDAAkD,aAAa;AAC/D,mBAAmB,EAAE;AACrB,kDAAkD,aAAa;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,kBAAkB,GAAG,GAAG,kBAAkB;AAC1C;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,uBAAuB,EAAE;AACzB,+DAA+D,kBAAkB;AACjF,uBAAuB,EAAE;AACzB;AACA,uB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","file":"account-account-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { LAYOUT_MODE } from '../../../layouts/layouts.model';\n\n@Component({\n  selector: 'app-steptwoverification',\n  templateUrl: './steptwoverification.component.html',\n  styleUrls: ['./steptwoverification.component.scss']\n})\n\n/**\n * Step-Two-Verification Component\n */\nexport class SteptwoverificationComponent implements OnInit {\n  layout_mode!: string;\n\n  // set the currenr year\n  year: number = new Date().getFullYear();\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.layout_mode = LAYOUT_MODE\n    if(this.layout_mode === 'dark') {\n      document.body.setAttribute(\"data-layout-mode\", \"dark\");\n    }\n  }\n\n  /***\n   * confirm otp\n   */\n  config = {\n    allowNumbersOnly: true,\n    length: 4,\n    isPasswordInput: false,\n    disableAutoFocus: false,\n    placeholder: '',\n    inputStyles: {\n      'width': '80px',\n      'height': '50px'\n    }\n  };\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJlbWFpbHZlcmlmaWNhdGlvbi5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsb2dpbi5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZWNvdmVycHdkMS5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"<div class=\\\"account-pages my-5 pt-sm-5\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-md-10\\\">\\n                <div class=\\\"text-center mb-5\\\">\\n                    <a routerLink=\\\"/\\\" class=\\\"auth-logo\\\">\\n                        <img src=\\\"assets/images/logo-dark.png\\\" alt=\\\"\\\" height=\\\"28\\\" class=\\\"auth-logo-dark\\\">\\n                        <img src=\\\"assets/images/logo-light.png\\\" alt=\\\"\\\" height=\\\"28\\\" class=\\\"auth-logo-light\\\">\\n                    </a>\\n                    <p class=\\\"font-size-15 text-muted mt-3\\\">Responsive <b>Bootstrap 5</b> Admin Dashboard</p>\\n                </div>\\n                <div class=\\\"card overflow-hidden\\\">\\n                    <div class=\\\"row g-0\\\">\\n                        <div class=\\\"col-lg-6\\\">\\n                            <div class=\\\"p-lg-5 p-4\\\">\\n\\n                                <div>\\n                                    <h5>Lock screen</h5>\\n                                    <p class=\\\"text-muted\\\">Enter your password to unlock the screen !</p>\\n                                </div>\\n\\n                                <div class=\\\"mt-4 pt-3\\\">\\n                                    <div class=\\\"user-thumb text-center mb-4\\\">\\n                                        <img src=\\\"assets/images/users/avatar-1.jpg\\\"\\n                                            class=\\\"rounded-circle img-thumbnail avatar-md\\\" alt=\\\"thumbnail\\\">\\n                                        <h5 class=\\\"font-size-15 mt-3\\\">Thomas Ortiz</h5>\\n                                    </div>\\n                                    <form action=\\\"index.html\\\">\\n\\n                                        <div class=\\\"mb-3\\\">\\n                                            <label for=\\\"userpassword\\\" class=\\\"fw-semibold\\\">Password</label>\\n                                            <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"userpassword\\\"\\n                                                placeholder=\\\"Enter password\\\">\\n                                        </div>\\n\\n                                        <div class=\\\"mt-4 text-end\\\">\\n                                            <button class=\\\"btn btn-primary w-md waves-effect waves-light\\\"\\n                                                type=\\\"submit\\\">Unlock</button>\\n                                        </div>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-lg-6\\\">\\n                            <div class=\\\"p-lg-5 p-4 bg-auth h-100 d-none d-lg-block\\\">\\n                                <div class=\\\"bg-overlay\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <!-- end card -->\\n                <div class=\\\"mt-5 text-center\\\">\\n                    <p>Not you ? return <a routerLink=\\\"/account/login1\\\" class=\\\"fw-semibold text-decoration-underline\\\">\\n                            Login\\n                        </a> </p>\\n                    <p>© {{year}} <b>Samply</b>. Crafted with <i class=\\\"mdi mdi-heart text-danger\\\"></i> by Pichforest\\n                    </p>\\n                </div>\\n            </div>\\n            <!-- end col -->\\n        </div>\\n        <!-- end row -->\\n    </div>\\n    <!-- end container -->\\n</div>\\n<!-- end account page -->\";","export default \"<div class=\\\"account-pages my-5 pt-sm-5\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-md-10\\\">\\n                <div class=\\\"text-center mb-5\\\">\\n                    <a routerLink=\\\"/\\\" class=\\\"auth-logo\\\">\\n                        <img src=\\\"assets/images/logo-dark.png\\\" alt=\\\"\\\" height=\\\"28\\\" class=\\\"auth-logo-dark\\\">\\n                        <img src=\\\"assets/images/logo-light.png\\\" alt=\\\"\\\" height=\\\"28\\\" class=\\\"auth-logo-light\\\">\\n                    </a>\\n                    <p class=\\\"font-size-15 text-muted mt-3\\\">Responsive <b>Bootstrap 5</b> Admin Dashboard</p>\\n                </div>\\n                <div class=\\\"card overflow-hidden\\\">\\n                    <div class=\\\"row g-0\\\">\\n                        <div class=\\\"col-lg-6\\\">\\n                            <div class=\\\"p-lg-5 p-4\\\">\\n\\n                                <div>\\n                                    <h5>Register account</h5>\\n                                    <p class=\\\"text-muted\\\">Get your free Samply account now.</p>\\n                                </div>\\n\\n                                <div class=\\\"mt-4 pt-3\\\">\\n                                    <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                                        <div class=\\\"mb-3\\\">\\n                                            <label class=\\\"fw-semibold\\\" for=\\\"useremail\\\">Email</label>\\n                                            <input type=\\\"email\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\"\\n                                                id=\\\"useremail\\\" placeholder=\\\"Enter email\\\"\\n                                                [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\">\\n                                            <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\n                                                <div *ngIf=\\\"f.email.errors.required\\\">Email is required</div>\\n                                                <div *ngIf=\\\"f.email.errors.email\\\">Email must be a valid email address\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n\\n                                        <div class=\\\"mb-3\\\">\\n                                            <label class=\\\"fw-semibold\\\" for=\\\"username\\\">Username</label>\\n                                            <input type=\\\"text\\\" formControlName=\\\"username\\\" class=\\\"form-control\\\"\\n                                                id=\\\"username\\\" placeholder=\\\"Enter username\\\"\\n                                                [ngClass]=\\\"{ 'is-invalid': submitted && f.username.errors }\\\">\\n                                            <div *ngIf=\\\"submitted && f.username.errors\\\" class=\\\"invalid-feedback\\\">\\n                                                <div *ngIf=\\\"f.username.errors.required\\\">Username Name is required</div>\\n                                            </div>\\n                                        </div>\\n\\n                                        <div class=\\\"mb-3\\\">\\n                                            <label class=\\\"fw-semibold\\\" for=\\\"userpassword\\\">Password</label>\\n                                            <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\"\\n                                                id=\\\"userpassword\\\" placeholder=\\\"Enter password\\\"\\n                                                [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\">\\n                                            <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\n                                                <div *ngIf=\\\"f.password.errors.required\\\">Password is required</div>\\n                                                <div *ngIf=\\\"f.password.errors.minlength\\\">Password must be at least 6\\n                                                    characters</div>\\n                                            </div>\\n                                        </div>\\n\\n                                        <div class=\\\"mt-4 text-end\\\">\\n                                            <button class=\\\"btn btn-primary w-md waves-effect waves-light\\\"\\n                                                type=\\\"submit\\\">Register</button>\\n                                        </div>\\n\\n                                        <div class=\\\"mt-4 text-center\\\">\\n                                            <p class=\\\"mb-0 text-muted\\\">By registering you agree to the Samply <a\\n                                                    href=\\\"javascript: void(0)\\\"\\n                                                    class=\\\"text-primary fw-semibold text-decoration-underline\\\">Terms of\\n                                                    Use</a></p>\\n                                        </div>\\n                                    </form>\\n                                </div>\\n\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-lg-6\\\">\\n                            <div class=\\\"p-lg-5 p-4 bg-auth h-100 d-none d-lg-block\\\">\\n                                <div class=\\\"bg-overlay\\\"></div>\\n\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <!-- end card -->\\n                <div class=\\\"mt-5 text-center\\\">\\n                    <p>Already have an account ? <a routerLink=\\\"/account/login1\\\"\\n                            class=\\\"fw-semibold text-decoration-underline\\\"> Login </a> </p>\\n                    <p>© {{year}} <b>Samply</b>. Crafted with <i class=\\\"mdi mdi-heart text-danger\\\"></i> by Pichforest\\n                    </p>\\n                </div>\\n            </div>\\n            <!-- end col -->\\n        </div>\\n        <!-- end row -->\\n    </div>\\n    <!-- end container -->\\n</div>\\n<!-- end account page -->\";","import { Pipe, EventEmitter, Component, Input, Output, Directive, ElementRef, Renderer2, NgModule } from '@angular/core';\nimport { FormGroup, FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/forms';\n\nfunction NgOtpInputComponent_div_0_input_1_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"input\", 3);\n    ɵngcc0.ɵɵlistener(\"keydown\", function NgOtpInputComponent_div_0_input_1_Template_input_keydown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(2); return ctx_r4.onKeyDown($event); })(\"keyup\", function NgOtpInputComponent_div_0_input_1_Template_input_keyup_0_listener($event) { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r5); const i_r3 = restoredCtx.index; const ctx_r6 = ɵngcc0.ɵɵnextContext(2); return ctx_r6.onKeyUp($event, i_r3); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"otp-input \", ctx_r1.config.inputClass, \"\");\n    ɵngcc0.ɵɵpropertyInterpolate2(\"id\", \"otp_\", i_r3, \"_\", ctx_r1.componentKey, \"\");\n    ɵngcc0.ɵɵproperty(\"pattern\", ctx_r1.config.allowNumbersOnly ? \"\\\\d*\" : \"\")(\"type\", ctx_r1.inputType)(\"placeholder\", (ctx_r1.config == null ? null : ctx_r1.config.placeholder) || \"\")(\"disabledNumberOnly\", !ctx_r1.config.allowNumbersOnly)(\"ngStyle\", ctx_r1.config.inputStyles)(\"formControl\", ctx_r1.otpForm.controls[item_r2]);\n} }\nfunction NgOtpInputComponent_div_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵtemplate(1, NgOtpInputComponent_div_0_input_1_Template, 1, 11, \"input\", 2);\n    ɵngcc0.ɵɵpipe(2, \"keys\");\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMapInterpolate1(\"wrapper \", ctx_r0.config.containerClass, \"\");\n    ɵngcc0.ɵɵpropertyInterpolate1(\"id\", \"c_\", ctx_r0.componentKey, \"\");\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ctx_r0.config.containerStyles);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ɵngcc0.ɵɵpipeBind1(2, 6, ctx_r0.otpForm == null ? null : ctx_r0.otpForm.controls));\n} }\nclass KeysPipe {\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    transform(value) {\r\n        return Object.keys(value);\r\n    }\r\n}\nKeysPipe.ɵfac = function KeysPipe_Factory(t) { return new (t || KeysPipe)(); };\nKeysPipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: \"keys\", type: KeysPipe, pure: true });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(KeysPipe, [{\n        type: Pipe,\n        args: [{\n                name: 'keys'\n            }]\n    }], null, null); })();\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass Config {\r\n}\r\nif (false) {\r\n    /** @type {?} */\r\n    Config.prototype.inputStyles;\r\n    /** @type {?} */\r\n    Config.prototype.containerStyles;\r\n    /** @type {?} */\r\n    Config.prototype.allowKeyCodes;\r\n    /** @type {?} */\r\n    Config.prototype.length;\r\n    /** @type {?} */\r\n    Config.prototype.allowNumbersOnly;\r\n    /** @type {?} */\r\n    Config.prototype.inputClass;\r\n    /** @type {?} */\r\n    Config.prototype.containerClass;\r\n    /** @type {?} */\r\n    Config.prototype.isPasswordInput;\r\n    /** @type {?} */\r\n    Config.prototype.disableAutoFocus;\r\n    /** @type {?} */\r\n    Config.prototype.placeholder;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NgOtpInputComponent {\r\n    /**\r\n     * @param {?} keysPipe\r\n     */\r\n    constructor(keysPipe) {\r\n        this.keysPipe = keysPipe;\r\n        this.config = { length: 4 };\r\n        // tslint:disable-next-line: no-output-on-prefix\r\n        this.onInputChange = new EventEmitter();\r\n        this.inputControls = new Array(this.config.length);\r\n        this.componentKey = Math.random()\r\n            .toString(36)\r\n            .substring(2) + new Date().getTime().toString(36);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        this.otpForm = new FormGroup({});\r\n        for (let index = 0; index < this.config.length; index++) {\r\n            this.otpForm.addControl(this.getControlName(index), new FormControl());\r\n        }\r\n        this.inputType = this.getInputType();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngAfterViewInit() {\r\n        if (!this.config.disableAutoFocus) {\r\n            /** @type {?} */\r\n            const containerItem = document.getElementById(`c_${this.componentKey}`);\r\n            if (containerItem) {\r\n                containerItem.addEventListener('paste', (/**\r\n                 * @param {?} evt\r\n                 * @return {?}\r\n                 */\r\n                (evt) => this.handlePaste(evt)));\r\n                /** @type {?} */\r\n                const ele = containerItem.getElementsByClassName('otp-input')[0];\r\n                if (ele && ele.focus) {\r\n                    ele.focus();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} idx\r\n     * @return {?}\r\n     */\r\n    getControlName(idx) {\r\n        return `ctrl_${idx}`;\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ifLeftArrow(event) {\r\n        return this.ifKeyCode(event, 37);\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ifRightArrow(event) {\r\n        return this.ifKeyCode(event, 39);\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ifBackspaceOrDelete(event) {\r\n        return (event.key === 'Backspace' ||\r\n            event.key === 'Delete' ||\r\n            this.ifKeyCode(event, 8) ||\r\n            this.ifKeyCode(event, 46));\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @param {?} targetCode\r\n     * @return {?}\r\n     */\r\n    ifKeyCode(event, targetCode) {\r\n        /** @type {?} */\r\n        const key = event.keyCode || event.charCode;\r\n        // tslint:disable-next-line: triple-equals\r\n        return key == targetCode ? true : false;\r\n    }\r\n    /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    onKeyDown($event) {\r\n        /** @type {?} */\r\n        var isSpace = this.ifKeyCode($event, 32);\r\n        if (isSpace) { // prevent space\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} $event\r\n     * @param {?} inputIdx\r\n     * @return {?}\r\n     */\r\n    onKeyUp($event, inputIdx) {\r\n        /** @type {?} */\r\n        const nextInputId = this.appendKey(`otp_${inputIdx + 1}`);\r\n        /** @type {?} */\r\n        const prevInputId = this.appendKey(`otp_${inputIdx - 1}`);\r\n        if (this.ifRightArrow($event)) {\r\n            this.setSelected(nextInputId);\r\n            return;\r\n        }\r\n        if (this.ifLeftArrow($event)) {\r\n            this.setSelected(prevInputId);\r\n            return;\r\n        }\r\n        /** @type {?} */\r\n        const isBackspace = this.ifBackspaceOrDelete($event);\r\n        if (isBackspace && !$event.target.value) {\r\n            this.setSelected(prevInputId);\r\n            this.rebuildValue();\r\n            return;\r\n        }\r\n        if (!$event.target.value) {\r\n            return;\r\n        }\r\n        if (this.ifValidEntry($event)) {\r\n            this.setSelected(nextInputId);\r\n        }\r\n        this.rebuildValue();\r\n    }\r\n    /**\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    appendKey(id) {\r\n        return `${id}_${this.componentKey}`;\r\n    }\r\n    /**\r\n     * @param {?} eleId\r\n     * @return {?}\r\n     */\r\n    setSelected(eleId) {\r\n        this.focusTo(eleId);\r\n        /** @type {?} */\r\n        const ele = document.getElementById(eleId);\r\n        if (ele && ele.setSelectionRange) {\r\n            setTimeout((/**\r\n             * @return {?}\r\n             */\r\n            () => {\r\n                ele.setSelectionRange(0, 1);\r\n            }), 0);\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ifValidEntry(event) {\r\n        /** @type {?} */\r\n        const inp = String.fromCharCode(event.keyCode);\r\n        /** @type {?} */\r\n        const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n        return (isMobile ||\r\n            /[a-zA-Z0-9-_]/.test(inp) ||\r\n            (this.config.allowKeyCodes &&\r\n                this.config.allowKeyCodes.includes(event.keyCode)) ||\r\n            (event.keyCode >= 96 && event.keyCode <= 105));\r\n    }\r\n    /**\r\n     * @param {?} eleId\r\n     * @return {?}\r\n     */\r\n    focusTo(eleId) {\r\n        /** @type {?} */\r\n        const ele = document.getElementById(eleId);\r\n        if (ele) {\r\n            ele.focus();\r\n        }\r\n    }\r\n    // method to set component value\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    setValue(value) {\r\n        if (this.config.allowNumbersOnly && isNaN(value)) {\r\n            return;\r\n        }\r\n        this.otpForm.reset();\r\n        if (!value) {\r\n            this.rebuildValue();\r\n            return;\r\n        }\r\n        value = value.toString().replace(/\\s/g, ''); // remove whitespace\r\n        Array.from(value).forEach((/**\r\n         * @param {?} c\r\n         * @param {?} idx\r\n         * @return {?}\r\n         */\r\n        (c, idx) => {\r\n            if (this.otpForm.get(this.getControlName(idx))) {\r\n                this.otpForm.get(this.getControlName(idx)).setValue(c);\r\n            }\r\n        }));\r\n        if (!this.config.disableAutoFocus) {\r\n            /** @type {?} */\r\n            const containerItem = document.getElementById(`c_${this.componentKey}`);\r\n            /** @type {?} */\r\n            var indexOfElementToFocus = value.length < this.config.length ? value.length : (this.config.length - 1);\r\n            /** @type {?} */\r\n            let ele = containerItem.getElementsByClassName('otp-input')[indexOfElementToFocus];\r\n            if (ele && ele.focus) {\r\n                ele.focus();\r\n            }\r\n        }\r\n        this.rebuildValue();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    rebuildValue() {\r\n        /** @type {?} */\r\n        let val = '';\r\n        this.keysPipe.transform(this.otpForm.controls).forEach((/**\r\n         * @param {?} k\r\n         * @return {?}\r\n         */\r\n        k => {\r\n            if (this.otpForm.controls[k].value) {\r\n                val += this.otpForm.controls[k].value;\r\n            }\r\n        }));\r\n        this.onInputChange.emit(val);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    getInputType() {\r\n        return this.config.isPasswordInput\r\n            ? 'password'\r\n            : this.config.allowNumbersOnly\r\n                ? 'tel'\r\n                : 'text';\r\n    }\r\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    handlePaste(e) {\r\n        // Get pasted data via clipboard API\r\n        /** @type {?} */\r\n        let clipboardData = e.clipboardData || window['clipboardData'];\r\n        if (clipboardData) {\r\n            /** @type {?} */\r\n            var pastedData = clipboardData.getData('Text');\r\n        }\r\n        // Stop data actually being pasted into div\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        if (!pastedData) {\r\n            return;\r\n        }\r\n        this.setValue(pastedData);\r\n    }\r\n}\nNgOtpInputComponent.ɵfac = function NgOtpInputComponent_Factory(t) { return new (t || NgOtpInputComponent)(ɵngcc0.ɵɵdirectiveInject(KeysPipe)); };\nNgOtpInputComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NgOtpInputComponent, selectors: [[\"ng-otp-input\"]], inputs: { config: \"config\" }, outputs: { onInputChange: \"onInputChange\" }, decls: 1, vars: 1, consts: [[3, \"class\", \"id\", \"ngStyle\", 4, \"ngIf\"], [3, \"id\", \"ngStyle\"], [\"numberOnly\", \"\", \"maxlength\", \"1\", \"autocomplete\", \"off\", 3, \"pattern\", \"type\", \"placeholder\", \"disabledNumberOnly\", \"ngStyle\", \"class\", \"formControl\", \"id\", \"keydown\", \"keyup\", 4, \"ngFor\", \"ngForOf\"], [\"numberOnly\", \"\", \"maxlength\", \"1\", \"autocomplete\", \"off\", 3, \"pattern\", \"type\", \"placeholder\", \"disabledNumberOnly\", \"ngStyle\", \"formControl\", \"id\", \"keydown\", \"keyup\"]], template: function NgOtpInputComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NgOtpInputComponent_div_0_Template, 3, 8, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.otpForm == null ? null : ctx.otpForm.controls);\n    } }, directives: function () { return [ɵngcc1.NgIf, ɵngcc1.NgStyle, ɵngcc1.NgForOf, ɵngcc2.DefaultValueAccessor, NumberOnlyDirective, ɵngcc2.MaxLengthValidator, ɵngcc2.PatternValidator, ɵngcc2.NgControlStatus, ɵngcc2.FormControlDirective]; }, pipes: function () { return [KeysPipe]; }, styles: [\".otp-input[_ngcontent-%COMP%]{width:50px;height:50px;border-radius:4px;border:1px solid #c5c5c5;text-align:center;font-size:32px}.wrapper[_ngcontent-%COMP%]   .otp-input[_ngcontent-%COMP%]:not(:last-child){margin-right:8px}@media screen and (max-width:767px){.otp-input[_ngcontent-%COMP%]{width:40px;font-size:24px;height:40px}}@media screen and (max-width:420px){.otp-input[_ngcontent-%COMP%]{width:30px;font-size:18px;height:30px}}\"] });\r\n/** @nocollapse */\r\nNgOtpInputComponent.ctorParameters = () => [\r\n    { type: KeysPipe }\r\n];\r\nNgOtpInputComponent.propDecorators = {\r\n    config: [{ type: Input }],\r\n    onInputChange: [{ type: Output }]\r\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgOtpInputComponent, [{\n        type: Component,\n        args: [{\n                // tslint:disable-next-line: component-selector\n                selector: 'ng-otp-input',\n                template: \"<div class=\\\"wrapper {{config.containerClass}}\\\" id=\\\"c_{{componentKey}}\\\" *ngIf=\\\"otpForm?.controls\\\"\\r\\n  [ngStyle]=\\\"config.containerStyles\\\">\\r\\n  <input [pattern]=\\\"config.allowNumbersOnly ? '\\\\\\\\d*' : ''\\\" [type]=\\\"inputType\\\" numberOnly [placeholder]=\\\"config?.placeholder || ''\\\"\\r\\n    [disabledNumberOnly]=\\\"!config.allowNumbersOnly\\\" [ngStyle]=\\\"config.inputStyles\\\" maxlength=\\\"1\\\"\\r\\n    class=\\\"otp-input {{config.inputClass}}\\\" autocomplete=\\\"off\\\" *ngFor=\\\"let item of otpForm?.controls | keys;let i=index\\\"\\r\\n    [formControl]=\\\"otpForm.controls[item]\\\" id=\\\"otp_{{i}}_{{componentKey}}\\\" (keydown)=\\\"onKeyDown($event)\\\"\\r\\n    (keyup)=\\\"onKeyUp($event,i)\\\">\\r\\n</div>\",\n                styles: [\".otp-input{width:50px;height:50px;border-radius:4px;border:1px solid #c5c5c5;text-align:center;font-size:32px}.wrapper .otp-input:not(:last-child){margin-right:8px}@media screen and (max-width:767px){.otp-input{width:40px;font-size:24px;height:40px}}@media screen and (max-width:420px){.otp-input{width:30px;font-size:18px;height:30px}}\"]\n            }]\n    }], function () { return [{ type: KeysPipe }]; }, { config: [{\n            type: Input\n        }], onInputChange: [{\n            type: Output\n        }] }); })();\r\nif (false) {\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.config;\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.onInputChange;\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.otpForm;\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.inputControls;\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.componentKey;\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.inputType;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NgOtpInputComponent.prototype.keysPipe;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NumberOnlyDirective {\r\n    /**\r\n     * @param {?} _elRef\r\n     * @param {?} _renderer\r\n     */\r\n    constructor(_elRef, _renderer) {\r\n        this._elRef = _elRef;\r\n        this._renderer = _renderer;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        if (!this.disabledNumberOnly) {\r\n            this._renderer.setAttribute(this._elRef.nativeElement, 'onkeypress', 'return (event.charCode >= 48 && event.charCode <= 57) || event.charCode == 0');\r\n        }\r\n    }\r\n}\nNumberOnlyDirective.ɵfac = function NumberOnlyDirective_Factory(t) { return new (t || NumberOnlyDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };\nNumberOnlyDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: NumberOnlyDirective, selectors: [[\"\", \"numberOnly\", \"\"]], inputs: { disabledNumberOnly: \"disabledNumberOnly\" } });\r\n/** @nocollapse */\r\nNumberOnlyDirective.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: Renderer2 }\r\n];\r\nNumberOnlyDirective.propDecorators = {\r\n    disabledNumberOnly: [{ type: Input }]\r\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NumberOnlyDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[numberOnly]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { disabledNumberOnly: [{\n            type: Input\n        }] }); })();\r\nif (false) {\r\n    /** @type {?} */\r\n    NumberOnlyDirective.prototype.disabledNumberOnly;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NumberOnlyDirective.prototype._elRef;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NumberOnlyDirective.prototype._renderer;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NgOtpInputModule {\r\n}\nNgOtpInputModule.ɵfac = function NgOtpInputModule_Factory(t) { return new (t || NgOtpInputModule)(); };\nNgOtpInputModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgOtpInputModule });\nNgOtpInputModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [KeysPipe], imports: [[\n            CommonModule,\n            FormsModule,\n            ReactiveFormsModule\n        ]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgOtpInputModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                    ReactiveFormsModule\n                ],\n                declarations: [NgOtpInputComponent, KeysPipe, NumberOnlyDirective],\n                exports: [NgOtpInputComponent],\n                providers: [KeysPipe]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgOtpInputModule, { declarations: function () { return [NgOtpInputComponent, KeysPipe, NumberOnlyDirective]; }, imports: function () { return [CommonModule,\n        FormsModule,\n        ReactiveFormsModule]; }, exports: function () { return [NgOtpInputComponent]; } }); })();\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { NgOtpInputModule, NgOtpInputComponent as ɵa, KeysPipe as ɵb, NumberOnlyDirective as ɵc };\n\n//# sourceMappingURL=ng-otp-input.js.map","export default \"<div class=\\\"account-pages my-5 pt-sm-5\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-md-10\\\">\\n                <div class=\\\"text-center mb-5\\\">\\n                    <a routerLink=\\\"/\\\" class=\\\"auth-logo\\\">\\n                        <img src=\\\"assets/images/logo-dark.png\\\" alt=\\\"\\\" height=\\\"28\\\" class=\\\"auth-logo-dark\\\">\\n                        <img src=\\\"assets/images/logo-light.png\\\" alt=\\\"\\\" height=\\\"28\\\" class=\\\"auth-logo-light\\\">\\n                    </a>\\n                    <p class=\\\"font-size-15 text-muted mt-3\\\">Responsive <b>Bootstrap 5</b> Admin Dashboard</p>\\n                </div>\\n                <div class=\\\"card overflow-hidden\\\">\\n                    <div class=\\\"row g-0\\\">\\n                        <div class=\\\"col-lg-6\\\">\\n                            <div class=\\\"p-lg-5 p-4\\\">\\n\\n                                <div>\\n                                    <h5>Welcome Back !</h5>\\n                                    <p class=\\\"text-muted\\\">Sign in to continue to Samply.</p>\\n                                </div>\\n\\n                                <div class=\\\"mt-4 pt-3\\\">\\n                                    <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n                                        <div class=\\\"mb-3\\\">\\n                                            <label for=\\\"email\\\" class=\\\"fw-semibold\\\">Email</label>\\n                                            <input type=\\\"text\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\"\\n                                                placeholder=\\\"Enter email\\\"\\n                                                [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\">\\n                                            <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\n                                                <div *ngIf=\\\"f.email.errors.required\\\">Email is required</div>\\n                                                <div *ngIf=\\\"f.email.errors.email\\\">Email must be a valid email address\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n\\n                                        <div class=\\\"mb-3 mb-4\\\">\\n                                            <label for=\\\"userpassword\\\" class=\\\"fw-semibold\\\">Password</label>\\n                                            <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\"\\n                                                id=\\\"userpassword\\\" placeholder=\\\"Enter password\\\"\\n                                                [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\">\\n                                            <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\n                                                <div *ngIf=\\\"f.email.errors.required\\\">Password is required</div>\\n                                            </div>\\n                                        </div>\\n\\n                                        <div class=\\\"row align-items-center\\\">\\n                                            <div class=\\\"col-6\\\">\\n                                                <div class=\\\"form-check\\\">\\n                                                    <input type=\\\"checkbox\\\" class=\\\"form-check-input font-size-16\\\"\\n                                                        id=\\\"remember-check\\\">\\n                                                    <label class=\\\"form-check-label\\\" for=\\\"remember-check\\\">Remember\\n                                                        me</label>\\n                                                </div>\\n                                            </div>\\n                                            <div class=\\\"col-6\\\">\\n                                                <div class=\\\"text-end\\\">\\n                                                    <button class=\\\"btn btn-primary w-md waves-effect waves-light\\\"\\n                                                        type=\\\"submit\\\">Log In</button>\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n\\n                                        <div class=\\\"mt-4\\\">\\n                                            <a routerLink=\\\"/account/recoverpwd\\\" class=\\\"text-muted\\\"><i\\n                                                    class=\\\"mdi mdi-lock me-1\\\"></i> Forgot your password?</a>\\n                                        </div>\\n                                    </form>\\n                                </div>\\n\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"col-lg-6\\\">\\n                            <div class=\\\"p-lg-5 p-4 bg-auth h-100 d-none d-lg-block\\\">\\n                                <div class=\\\"bg-overlay\\\"></div>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                </div>\\n                <!-- end card -->\\n                <div class=\\\"mt-5 text-center\\\">\\n                    <p>Don't have an account ? <a routerLink=\\\"/account/register\\\"\\n                            class=\\\"fw-semibold text-decoration-underline text-primary\\\"> Sign up </a> </p>\\n                    <p>© {{year}} <b>Samply</b>. Crafted with <i class=\\\"mdi mdi-heart text-danger\\\"></i> by Pichforest\\n                    </p>\\n                </div>\\n            </div>\\n            <!-- end col -->\\n        </div>\\n        <!-- end row -->\\n    </div>\\n    <!-- end container -->\\n</div>\\n<!-- end account page -->\";","import { Component, OnInit } from '@angular/core';\nimport { LAYOUT_MODE } from '../../../layouts/layouts.model';\n\n@Component({\n  selector: 'app-confirmmail',\n  templateUrl: './confirmmail.component.html',\n  styleUrls: ['./confirmmail.component.scss']\n})\n\n/**\n * Confirm-Mail Component\n */\nexport class ConfirmmailComponent implements OnInit {\n  layout_mode!: string;\n\n  // set the currenr year\n  year: number = new Date().getFullYear();\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.layout_mode = LAYOUT_MODE\n    if(this.layout_mode === 'dark') {\n      document.body.setAttribute(\"data-layout-mode\", \"dark\");\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { AuthenticationService } from '../../../core/services/auth.service';\nimport { AuthfakeauthenticationService } from '../../../core/services/authfake.service';\nimport { environment } from '../../../../environments/environment';\nimport { LAYOUT_MODE } from '../../../layouts/layouts.model';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\n\n/**\n * Login Component\n */\nexport class LoginComponent implements OnInit {\n  \n  layout_mode!: string;\n\n  // set the currenr year\n  year: number = new Date().getFullYear();\n  loginForm!: FormGroup;\n  submitted = false;\n  returnUrl!: string;\n  error = '';\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authenticationService: AuthenticationService,\n    private authFackservice: AuthfakeauthenticationService,\n  ) {\n    // redirect to home if already logged in\n    if (this.authenticationService.currentUserValue) {\n      this.router.navigate(['/']);\n    }\n  }\n\n  ngOnInit(): void {\n    this.layout_mode = LAYOUT_MODE\n    if(this.layout_mode === 'dark') {\n      document.body.setAttribute(\"data-layout-mode\", \"dark\");\n    }\n    //Validation Set\n    this.loginForm = this.formBuilder.group({\n      email: ['admin@pichforest.com', [Validators.required, Validators.email]],\n      password: ['123456', [Validators.required]],\n    });\n    // get return url from route parameters or default to '/'\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n  // convenience getter for easy access to form fields\n  get f() { return this.loginForm.controls; }\n  /**\n   * Form submit\n   */\n  onSubmit() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n      return;\n    } else {\n      if (environment.defaultauth === 'firebase') {\n        this.authenticationService.login(this.f.email.value, this.f.password.value).then((res: any) => {\n          this.router.navigate(['']);\n        })\n          .catch((error: string) => {\n            this.error = error ? error : '';\n          });\n      } else {\n        this.authFackservice.login(this.f.email.value, this.f.password.value)\n          .pipe(first())\n          .subscribe(\n            (data: any) => {\n              this.router.navigate(['']);\n            },\n            (error: string) => {\n              this.error = error ? error : '';\n            });\n      }\n    }\n  }\n\n}\n","export default \"<div class=\\\"account-pages my-5 pt-sm-5\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-md-10\\\">\\n                <div class=\\\"text-center mb-5\\\">\\n                    <a routerLink=\\\"/\\\" class=\\\"auth-logo\\\">\\n                        <img src=\\\"assets/images/logo-dark.png\\\" alt=\\\"\\\" height=\\\"28\\\" class=\\\"auth-logo-dark\\\">\\n                        <img src=\\\"assets/images/logo-light.png\\\" alt=\\\"\\\" height=\\\"28\\\" class=\\\"auth-logo-light\\\">\\n                    </a>\\n                    <p class=\\\"font-size-15 text-muted mt-3\\\">Responsive <b>Bootstrap 5</b> Admin Dashboard</p>\\n                </div>\\n                <div class=\\\"card overflow-hidden\\\">\\n                    <div class=\\\"row g-0\\\">\\n\\n                        <div class=\\\"col-lg-6\\\">\\n                            <div class=\\\"p-lg-5 p-4\\\">\\n                                <div>\\n                                    <h5>Reset Password</h5>\\n                                    <p class=\\\"text-muted\\\">Re-Password with Samply.</p>\\n                                </div>\\n                                <div class=\\\"mt-4 pt-3\\\">\\n                                    <div class=\\\"alert alert-success mb-4\\\" role=\\\"alert\\\">\\n                                        Enter your Email and instructions will be sent to you!\\n                                    </div>\\n\\n                                    <form [formGroup]=\\\"resetForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                                        <div class=\\\"mb-3\\\">\\n                                            <label class=\\\"fw-semibold\\\" for=\\\"useremail\\\">Email</label>\\n                                            <input type=\\\"email\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\"\\n                                                id=\\\"useremail\\\" placeholder=\\\"Enter email\\\"\\n                                                [ngClass]=\\\"{'is-invalid': submitted && f.email.errors }\\\">\\n                                            <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\n                                                <div *ngIf=\\\"f.email.errors.required\\\">Email is required</div>\\n                                            </div>\\n                                        </div>\\n\\n                                        <div class=\\\"mt-4 text-end\\\">\\n                                            <button class=\\\"btn btn-primary w-md waves-effect waves-light\\\"\\n                                                type=\\\"submit\\\">Reset</button>\\n                                        </div>\\n                                    </form>\\n                                </div>\\n\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-lg-6\\\">\\n                            <div class=\\\"p-lg-5 p-4 bg-auth h-100 d-none d-lg-block\\\">\\n                                <div class=\\\"bg-overlay\\\"></div>\\n\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <!-- end card -->\\n                <div class=\\\"mt-5 text-center\\\">\\n                    <p>Remember It ? <a routerLink=\\\"/account/login\\\" class=\\\"fw-semibold text-decoration-underline\\\"> Login\\n                        </a>\\n                    </p>\\n                    <p>© {{year}} <b>Samply</b>. Crafted with <i class=\\\"mdi mdi-heart text-danger\\\"></i> by Pichforest\\n                    </p>\\n                </div>\\n            </div>\\n            <!-- end col -->\\n        </div>\\n        <!-- end row -->\\n    </div>\\n    <!-- end container -->\\n</div>\\n<!-- end account page -->\";","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { environment } from '../../../../environments/environment';\nimport { AuthenticationService } from '../../../core/services/auth.service';\nimport { UserProfileService } from '../../../core/services/user.service';\nimport { LAYOUT_MODE } from '../../../layouts/layouts.model';\n\nimport { Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\n\n/**\n * Register Component\n */\nexport class RegisterComponent implements OnInit {\n  layout_mode!: string;\n\n  signupForm!: FormGroup;\n  submitted = false;\n  successmsg = false;\n  error = '';\n\n  // set the currenr year\n  year: number = new Date().getFullYear();\n\n  constructor(private formBuilder: FormBuilder,\n    private router: Router,\n    private authenticationService: AuthenticationService,\n    private userService: UserProfileService) { }\n\n  ngOnInit(): void {\n\n    this.layout_mode = LAYOUT_MODE\n    if(this.layout_mode === 'dark') {\n      document.body.setAttribute(\"data-layout-mode\", \"dark\");\n    }\n\n    // Validation Set\n    this.signupForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n    });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.signupForm.controls; }\n\n  /**\n   * On submit form\n   */\n  onSubmit() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.signupForm.invalid) {\n      return;\n    } else {\n      if (environment.defaultauth === 'firebase') {\n        this.authenticationService.register(this.f.email.value, this.f.password.value).then((res: any) => {\n          this.successmsg = true;\n          if (this.successmsg) {\n            this.router.navigate(['']);\n          }\n        })\n          .catch((error: string) => {\n            this.error = error ? error : '';\n          });\n      } else {\n        this.userService.register(this.signupForm.value)\n          .pipe(first())\n          .subscribe(\n            (data: any) => {\n              this.successmsg = true;\n              if (this.successmsg) {\n                this.router.navigate(['/account/login']);\n              }\n            },\n            (error: any) => {\n              this.error = error ? error : '';\n            });\n      }\n    }\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsb2dpbjEuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsb2Nrc2NyZWVuLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZWNvdmVycHdkLmNvbXBvbmVudC5zY3NzIn0= */\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { Login1Component } from './login1/login1.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { Register1Component } from './register1/register1.component';\r\nimport { RecoverpwdComponent } from './recoverpwd/recoverpwd.component';\r\nimport { Recoverpwd1Component } from './recoverpwd1/recoverpwd1.component';\r\nimport { LockscreenComponent } from './lockscreen/lockscreen.component';\r\nimport { ConfirmmailComponent } from './confirmmail/confirmmail.component';\r\nimport { EmailverificationComponent } from './emailverification/emailverification.component';\r\nimport { SteptwoverificationComponent } from './steptwoverification/steptwoverification.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent,\r\n  },\r\n  {\r\n    path: 'login1',\r\n    component: Login1Component,\r\n  },\r\n  {\r\n    path: 'register',\r\n    component: RegisterComponent,\r\n  },\r\n  {\r\n    path: 'register1',\r\n    component: Register1Component,\r\n  },\r\n  {\r\n    path: 'recoverpwd',\r\n    component: RecoverpwdComponent,\r\n  },\r\n  {\r\n    path: 'recoverpwd1',\r\n    component: Recoverpwd1Component,\r\n  },\r\n  {\r\n    path: 'lockscreen',\r\n    component: LockscreenComponent,\r\n  },\r\n  {\r\n    path: 'confirm-mail',\r\n    component: ConfirmmailComponent,\r\n  },\r\n  {\r\n    path: 'email-verification',\r\n    component: EmailverificationComponent,\r\n  },\r\n  {\r\n    path: 'two-step-verification',\r\n    component: SteptwoverificationComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AuthRoutingModule { }\r\n","export default \"<div class=\\\"account-pages my-5 pt-sm-5\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-12\\\">\\n                <div class=\\\"text-center mb-5 text-muted\\\">\\n                    <a routerLink=\\\"/\\\" class=\\\"auth-logo\\\">\\n                        <img src=\\\"assets/images/logo-dark.png\\\" alt=\\\"\\\" height=\\\"28\\\" class=\\\"auth-logo-dark\\\">\\n                        <img src=\\\"assets/images/logo-light.png\\\" alt=\\\"\\\" height=\\\"28\\\" class=\\\"auth-logo-light\\\">\\n                    </a>\\n                    <p class=\\\"mt-3 font-size-15\\\">Responsive <strong>Bootstrap 5</strong> Admin Dashboard</p>\\n                </div>\\n            </div>\\n        </div>\\n        <!-- end row -->\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-md-8 col-lg-6 col-xl-5\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-body\\\">\\n                        <div class=\\\"p-2\\\">\\n                            <div class=\\\"text-center\\\">\\n                                <div class=\\\"avatar-md mx-auto\\\">\\n                                    <div class=\\\"avatar-title rounded-circle bg-light\\\">\\n                                        <i class=\\\"bx bx-mail-send h1 mb-0 text-primary\\\"></i>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"p-2 mt-4\\\">\\n                                    <h4 class=\\\"fw-semibold\\\">Success !</h4>\\n                                    <p class=\\\"text-muted\\\"><strong>All good!</strong> Your invoice was sent to your\\n                                        email. You'll be notified when someone will open it.</p>\\n                                    <div class=\\\"mt-4\\\">\\n                                        <a routerLink=\\\"/\\\" class=\\\"btn btn-success\\\">Back to Home</a>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <!-- end card -->\\n                <div class=\\\"mt-5 text-center\\\">\\n                    <p>© {{year}} <b>Samply</b>. Crafted with <i class=\\\"mdi mdi-heart text-danger\\\"></i> by Pichforest\\n                    </p>\\n                </div>\\n            </div>\\n            <!-- end col -->\\n        </div>\\n        <!-- end row -->\\n    </div>\\n    <!-- end container -->\\n</div>\\n<!-- end account page -->\";","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { LAYOUT_MODE } from '../../../layouts/layouts.model';\n\n@Component({\n  selector: 'app-register1',\n  templateUrl: './register1.component.html',\n  styleUrls: ['./register1.component.scss']\n})\n\n/**\n * Register1 Component\n */\nexport class Register1Component implements OnInit {\n  layout_mode!: string;\n\n  // set the currenr year\n  year: number = new Date().getFullYear();\n  registerForm!: FormGroup;\n  submitted = false;\n\n  constructor(private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n\n    this.layout_mode = LAYOUT_MODE\n    if(this.layout_mode === 'dark') {\n      document.body.setAttribute(\"data-layout-mode\", \"dark\");\n    }\n\n    this.registerForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      username: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.registerForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzdGVwdHdvdmVyaWZpY2F0aW9uLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { LAYOUT_MODE } from '../../../layouts/layouts.model';\n\n@Component({\n  selector: 'app-emailverification',\n  templateUrl: './emailverification.component.html',\n  styleUrls: ['./emailverification.component.scss']\n})\n\n/**\n * Email Verification Component\n */\nexport class EmailverificationComponent implements OnInit {\n  layout_mode!: string;\n\n  // set the currenr year\n  year: number = new Date().getFullYear();\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.layout_mode = LAYOUT_MODE\n    if(this.layout_mode === 'dark') {\n      document.body.setAttribute(\"data-layout-mode\", \"dark\");\n    }\n  }\n\n}\n","export default \"<div class=\\\"account-pages my-5 pt-sm-5\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-md-10\\\">\\n                <div class=\\\"text-center mb-5\\\">\\n                    <a routerLink=\\\"/\\\" class=\\\"auth-logo\\\">\\n                        <img src=\\\"assets/images/logo-dark.png\\\" alt=\\\"\\\" height=\\\"28\\\" class=\\\"auth-logo-dark\\\">\\n                        <img src=\\\"assets/images/logo-light.png\\\" alt=\\\"\\\" height=\\\"28\\\" class=\\\"auth-logo-light\\\">\\n                    </a>\\n                    <p class=\\\"font-size-15 text-muted mt-3\\\">Responsive <b>Bootstrap 5</b> Admin Dashboard</p>\\n                </div>\\n                <div class=\\\"card overflow-hidden\\\">\\n                    <div class=\\\"row g-0\\\">\\n                        <div class=\\\"col-lg-6\\\">\\n                            <div class=\\\"p-lg-5 p-4\\\">\\n\\n                                <div>\\n                                    <h5>Register account</h5>\\n                                    <p class=\\\"text-muted\\\">Get your free Samply account now.</p>\\n                                </div>\\n\\n                                <div class=\\\"mt-4 pt-3\\\">\\n                                    <form [formGroup]=\\\"signupForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n                                        <div class=\\\"mb-3\\\">\\n                                            <label class=\\\"fw-semibold\\\" for=\\\"useremail\\\">Email</label>\\n                                            <input type=\\\"email\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\"\\n                                                id=\\\"useremail\\\" placeholder=\\\"Enter email\\\"\\n                                                [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\">\\n                                            <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\n                                                <div *ngIf=\\\"f.email.errors.required\\\">Email is required</div>\\n                                            </div>\\n                                        </div>\\n\\n                                        <div class=\\\"mb-3\\\">\\n                                            <label class=\\\"fw-semibold\\\" for=\\\"username\\\">Username</label>\\n                                            <input type=\\\"text\\\" formControlName=\\\"username\\\" class=\\\"form-control\\\"\\n                                                id=\\\"username\\\" placeholder=\\\"Enter username\\\"\\n                                                [ngClass]=\\\"{ 'is-invalid': submitted && f.username.errors }\\\">\\n                                            <div *ngIf=\\\"submitted && f.username.errors\\\" class=\\\"invalid-feedback\\\">\\n                                                <div *ngIf=\\\"f.username.errors.required\\\">Username is required</div>\\n                                            </div>\\n                                        </div>\\n\\n                                        <div class=\\\"mb-3\\\">\\n                                            <label class=\\\"fw-semibold\\\" for=\\\"userpassword\\\">Password</label>\\n                                            <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\"\\n                                                id=\\\"userpassword\\\" placeholder=\\\"Enter password\\\"\\n                                                [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\">\\n                                            <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\n                                                <div *ngIf=\\\"f.password.errors.required\\\">Password is required</div>\\n                                            </div>\\n                                        </div>\\n\\n                                        <div class=\\\"mt-4 text-end\\\">\\n                                            <button class=\\\"btn btn-primary w-md waves-effect waves-light\\\"\\n                                                type=\\\"submit\\\">Register</button>\\n                                        </div>\\n\\n                                        <div class=\\\"mt-4 text-center\\\">\\n                                            <p class=\\\"mb-0 text-muted\\\">By registering you agree to the Samply <a\\n                                                href=\\\"javascript: void(0)\\\"\\n                                                    class=\\\"text-primary fw-semibold text-decoration-underline\\\">Terms of\\n                                                    Use</a></p>\\n                                        </div>\\n                                    </form>\\n                                </div>\\n\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-lg-6\\\">\\n                            <div class=\\\"p-lg-5 p-4 bg-auth h-100 d-none d-lg-block\\\">\\n                                <div class=\\\"bg-overlay\\\"></div>\\n\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <!-- end card -->\\n                <div class=\\\"mt-5 text-center\\\">\\n                    <p>Already have an account ? <a routerLink=\\\"/account/login\\\"\\n                            class=\\\"fw-semibold text-decoration-underline\\\"> Login </a> </p>\\n                    <p>© {{year}} <b>Samply</b>. Crafted with <i class=\\\"mdi mdi-heart text-danger\\\"></i> by Pichforest\\n                    </p>\\n                </div>\\n            </div>\\n            <!-- end col -->\\n        </div>\\n        <!-- end row -->\\n    </div>\\n    <!-- end container -->\\n</div>\\n<!-- end account page -->\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { NgOtpInputModule } from  'ng-otp-input';\n\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { RecoverpwdComponent } from './recoverpwd/recoverpwd.component';\nimport { LockscreenComponent } from './lockscreen/lockscreen.component';\nimport { ConfirmmailComponent } from './confirmmail/confirmmail.component';\nimport { EmailverificationComponent } from './emailverification/emailverification.component';\nimport { SteptwoverificationComponent } from './steptwoverification/steptwoverification.component';\nimport { Login1Component } from './login1/login1.component';\nimport { Register1Component } from './register1/register1.component';\nimport { Recoverpwd1Component } from './recoverpwd1/recoverpwd1.component';\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    RegisterComponent,\n    RecoverpwdComponent,\n    LockscreenComponent,\n    ConfirmmailComponent,\n    EmailverificationComponent,\n    SteptwoverificationComponent,\n    Login1Component,\n    Register1Component,\n    Recoverpwd1Component\n  ],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    NgOtpInputModule\n  ]\n})\nexport class AuthModule { }\n","export default \"<div class=\\\"account-pages my-5 pt-sm-5\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-12\\\">\\n                <div class=\\\"text-center mb-5 text-muted\\\">\\n                    <a routerLink=\\\"/\\\" class=\\\"auth-logo\\\">\\n                        <img src=\\\"assets/images/logo-dark.png\\\" alt=\\\"\\\" height=\\\"28\\\" class=\\\"auth-logo-dark\\\">\\n                        <img src=\\\"assets/images/logo-light.png\\\" alt=\\\"\\\" height=\\\"28\\\" class=\\\"auth-logo-light\\\">\\n                    </a>\\n                    <p class=\\\"mt-3 font-size-15\\\">Responsive <b>Bootstrap 5</b> Admin Dashboard</p>\\n                </div>\\n            </div>\\n        </div>\\n        <!-- end row -->\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-md-8 col-lg-6 col-xl-5\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-body\\\">\\n                        <div class=\\\"p-2\\\">\\n                            <div class=\\\"text-center\\\">\\n\\n                                <div class=\\\"avatar-md mx-auto\\\">\\n                                    <div class=\\\"avatar-title rounded-circle bg-light\\\">\\n                                        <i class=\\\"bx bxs-envelope h1 mb-0 text-primary\\\"></i>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"p-2 mt-4\\\">\\n                                    <h4>Verify your email</h4>\\n                                    <p class=\\\"text-muted\\\">We have sent you verification email <span\\n                                            class=\\\"font-weight-semibold\\\">example@abc.com</span>, Please check it</p>\\n                                    <div class=\\\"mt-4\\\">\\n                                        <a routerLink=\\\"/\\\" class=\\\"btn btn-success w-md\\\">Verify email</a>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <!-- end card -->\\n                <div class=\\\"mt-5 text-center\\\">\\n                    <p>Did't receive an email ? <a routerLink=\\\"/account/email-verification\\\"\\n                            class=\\\"fw-semibold text-primary text-decoration-underline\\\">\\n                            Resend </a> </p>\\n                    <p>© {{year}} <b>Samply</b>. Crafted with <i class=\\\"mdi mdi-heart text-danger\\\"></i> by Pichforest\\n                    </p>\\n                </div>\\n            </div>\\n            <!-- end col -->\\n        </div>\\n        <!-- end row -->\\n    </div>\\n    <!-- end container -->\\n</div>\\n<!-- end account page -->\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { User } from '../models/auth.models';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UserProfileService {\r\n    constructor(private http: HttpClient) { }\r\n    /***\r\n     * Get All User\r\n     */\r\n    getAll() {\r\n        return this.http.get<User[]>(`api/users`);\r\n    }\r\n\r\n    /***\r\n     * Facked User Register\r\n     */\r\n    register(user: User) {\r\n        return this.http.post(`/users/register`, user);\r\n    }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb25maXJtbWFpbC5jb21wb25lbnQuc2NzcyJ9 */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AccountRoutingModule } from './account-routing.module';\nimport { AuthModule } from './auth/auth.module';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    AccountRoutingModule,\n    AuthModule\n  ]\n})\nexport class AccountModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { LAYOUT_MODE } from '../../../layouts/layouts.model';\n\n@Component({\n  selector: 'app-recoverpwd1',\n  templateUrl: './recoverpwd1.component.html',\n  styleUrls: ['./recoverpwd1.component.scss']\n})\n\n/**\n * Recover-Password1 Component\n */\nexport class Recoverpwd1Component implements OnInit {\n  layout_mode!: string;\n\n  // set the currenr year\n  year: number = new Date().getFullYear();\n  recoverForm!: FormGroup;\n  submitted = false;\n\n  constructor(private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.layout_mode = LAYOUT_MODE\n    if(this.layout_mode === 'dark') {\n      document.body.setAttribute(\"data-layout-mode\", \"dark\");\n    }\n    this.recoverForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]]\n    });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.recoverForm.controls; }\n\n  onSubmit() {\n      this.submitted = true;\n  }\n\n}\n","export default \"<div class=\\\"account-pages my-5 pt-sm-5\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-md-10\\\">\\n                <div class=\\\"text-center mb-5\\\">\\n                    <a routerLink=\\\"/\\\" class=\\\"auth-logo\\\">\\n                        <img src=\\\"assets/images/logo-dark.png\\\" alt=\\\"\\\" height=\\\"28\\\" class=\\\"auth-logo-dark\\\">\\n                        <img src=\\\"assets/images/logo-light.png\\\" alt=\\\"\\\" height=\\\"28\\\" class=\\\"auth-logo-light\\\">\\n                    </a>\\n                    <p class=\\\"font-size-15 text-muted mt-3\\\">Responsive <b>Bootstrap 5</b> Admin Dashboard</p>\\n                </div>\\n                <div class=\\\"card overflow-hidden\\\">\\n                    <div class=\\\"row g-0\\\">\\n\\n                        <div class=\\\"col-lg-6\\\">\\n                            <div class=\\\"p-lg-5 p-4\\\">\\n                                <div>\\n                                    <h5>Reset Password</h5>\\n                                    <p class=\\\"text-muted\\\">Re-Password with Samply.</p>\\n                                </div>\\n                                <div class=\\\"mt-4 pt-3\\\">\\n                                    <div class=\\\"alert alert-success mb-4\\\" role=\\\"alert\\\">\\n                                        Enter your Email and instructions will be sent to you!\\n                                    </div>\\n                                    <form [formGroup]=\\\"recoverForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                                        <div class=\\\"mb-3\\\">\\n                                            <label class=\\\"fw-semibold\\\" for=\\\"useremail\\\">Email</label>\\n                                            <input type=\\\"email\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" id=\\\"useremail\\\"\\n                                                placeholder=\\\"Enter email\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\">\\n                                                <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\n                                                    <div *ngIf=\\\"f.email.errors.required\\\">Email is required</div>\\n                                                    <div *ngIf=\\\"f.email.errors.email\\\">Email must be a valid email address</div>\\n                                                </div>\\n                                        </div>\\n\\n                                        <div class=\\\"mt-4 text-end\\\">\\n                                            <button class=\\\"btn btn-primary w-md waves-effect waves-light\\\"\\n                                                type=\\\"submit\\\">Reset</button>\\n                                        </div>\\n                                    </form>\\n                                </div>\\n\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-lg-6\\\">\\n                            <div class=\\\"p-lg-5 p-4 bg-auth h-100 d-none d-lg-block\\\">\\n                                <div class=\\\"bg-overlay\\\"></div>\\n\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <!-- end card -->\\n                <div class=\\\"mt-5 text-center\\\">\\n                    <p>Remember It ? <a routerLink=\\\"/account/login1\\\" class=\\\"fw-semibold text-decoration-underline\\\">\\n                            Login\\n                        </a>\\n                    </p>\\n                    <p>© {{year}} <b>Samply</b>. Crafted with <i class=\\\"mdi mdi-heart text-danger\\\"></i> by Pichforest\\n                    </p>\\n                </div>\\n            </div>\\n            <!-- end col -->\\n        </div>\\n        <!-- end row -->\\n    </div>\\n    <!-- end container -->\\n</div>\\n<!-- end account page -->\";","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { LAYOUT_MODE } from '../../../layouts/layouts.model';\n\n@Component({\n  selector: 'app-login1',\n  templateUrl: './login1.component.html',\n  styleUrls: ['./login1.component.scss']\n})\n\n/**\n * Login1 Component\n */\nexport class Login1Component implements OnInit {\n  layout_mode!: string;\n\n  // set the currenr year\n  year: number = new Date().getFullYear();\n  loginForm!: FormGroup;\n  submitted = false;\n\n  constructor(private formBuilder: FormBuilder) { }\n  \n  ngOnInit(): void {\n    this.layout_mode = LAYOUT_MODE\n    if(this.layout_mode === 'dark') {\n      document.body.setAttribute(\"data-layout-mode\", \"dark\");\n    }\n    //Validation Set\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.loginForm.controls; }\n   \n  /**\n  * Bootsrap validation form submit method\n  */\n  onSubmit() {\n      this.submitted = true;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { environment } from '../../../../environments/environment';\nimport { AuthenticationService } from '../../../core/services/auth.service';\nimport { LAYOUT_MODE } from '../../../layouts/layouts.model';\n\n@Component({\n  selector: 'app-recoverpwd',\n  templateUrl: './recoverpwd.component.html',\n  styleUrls: ['./recoverpwd.component.scss']\n})\n\n/**\n * Recover-Password Component\n */\nexport class RecoverpwdComponent implements OnInit {\n\n  resetForm!: FormGroup;\n  layout_mode!: string;\n\n  // set the currenr year\n  year: number = new Date().getFullYear();\n  submitted = false;\n  error = '';\n  success = '';\n\n  constructor(private formBuilder: FormBuilder, private authenticationService: AuthenticationService) { }\n\n  ngOnInit(): void {\n    this.layout_mode = LAYOUT_MODE\n    if(this.layout_mode === 'dark') {\n      document.body.setAttribute(\"data-layout-mode\", \"dark\");\n    }\n    //Validation set\n    this.resetForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n    });\n  }\n  // convenience getter for easy access to form fields\n  get f() { return this.resetForm.controls; }\n  /**\n   * On submit form\n   */\n  onSubmit() {\n    this.success = '';\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.resetForm.invalid) {\n      return;\n    }\n    if (environment.defaultauth === 'firebase') {\n      this.authenticationService.resetPassword(this.f.email.value)\n        .catch(error => {\n          this.error = error ? error : '';\n        });\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  { path: 'auth', loadChildren: () => import('./auth/auth.module').then(m => m.AuthModule) }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AccountRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZWdpc3RlcjEuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { LAYOUT_MODE } from '../../../layouts/layouts.model';\n\n@Component({\n  selector: 'app-lockscreen',\n  templateUrl: './lockscreen.component.html',\n  styleUrls: ['./lockscreen.component.scss']\n})\n\n/**\n * Lock-Screen Component\n */\nexport class LockscreenComponent implements OnInit {\n\n  layout_mode!: string;\n\n  // set the currenr year\n  year: number = new Date().getFullYear();\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.layout_mode = LAYOUT_MODE\n    if(this.layout_mode === 'dark') {\n      document.body.setAttribute(\"data-layout-mode\", \"dark\");\n    }\n  }\n\n}\n","export default \"<div class=\\\"account-pages my-5 pt-sm-5\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-12\\\">\\n                <div class=\\\"text-center mb-5 text-muted\\\">\\n                    <a routerLink=\\\"/\\\" class=\\\"auth-logo\\\">\\n                        <img src=\\\"assets/images/logo-dark.png\\\" alt=\\\"\\\" height=\\\"28\\\" class=\\\"auth-logo-dark\\\">\\n                        <img src=\\\"assets/images/logo-light.png\\\" alt=\\\"\\\" height=\\\"28\\\" class=\\\"auth-logo-light\\\">\\n                    </a>\\n                    <p class=\\\"font-size-15 text-muted mt-3\\\">Responsive <b>Bootstrap 5</b> Admin Dashboard</p>\\n                </div>\\n            </div>\\n        </div>\\n        <!-- end row -->\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-md-8 col-lg-6 col-xl-5\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-body\\\">\\n                        <div class=\\\"p-2\\\">\\n                            <div class=\\\"text-center\\\">\\n                                <div class=\\\"avatar-md mx-auto\\\">\\n                                    <div class=\\\"avatar-title rounded-circle bg-light\\\">\\n                                        <i class=\\\"bx bxs-envelope h1 mb-0 text-primary\\\"></i>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"p-2 mt-4\\\">\\n                                    <h4>Verify your email</h4>\\n                                    <p class=\\\"mb-5 text-muted\\\">Please enter the 4 digit code sent to <span\\n                                            class=\\\"font-weight-semibold\\\">example@abc.com</span></p>\\n                                    <form>\\n                                        <ng-otp-input [config]=\\\"config\\\"></ng-otp-input>\\n                                    </form>\\n\\n                                    <div class=\\\"mt-4\\\">\\n                                        <a routerLink=\\\"/\\\" class=\\\"btn btn-success w-md\\\">Confirm</a>\\n                                    </div>\\n                                </div>\\n\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                </div>\\n                <!-- end card -->\\n                <div class=\\\"mt-5 text-center\\\">\\n                    <p>Did't receive a code ? <a routerLink=\\\"/account/two-step-verification\\\"\\n                            class=\\\"fw-semibold text-decoration-underline text-primary\\\">\\n                            Resend </a> </p>\\n                    <p>© {{year}} <b>Samply</b>. Crafted with <i class=\\\"mdi mdi-heart text-danger\\\"></i> by Pichforest\\n                    </p>\\n                </div>\\n            </div>\\n            <!-- end col -->\\n        </div>\\n        <!-- end row -->\\n    </div>\\n    <!-- end container -->\\n</div>\\n<!-- end account page -->\";","export default \"<div class=\\\"account-pages my-5 pt-sm-5\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-md-10\\\">\\n                <div class=\\\"text-center mb-5\\\">\\n                    <a routerLink=\\\"/\\\" class=\\\"auth-logo\\\">\\n                        <img src=\\\"assets/images/logo-dark.png\\\" alt=\\\"\\\" height=\\\"28\\\" class=\\\"auth-logo-dark\\\">\\n                        <img src=\\\"assets/images/logo-light.png\\\" alt=\\\"\\\" height=\\\"28\\\" class=\\\"auth-logo-light\\\">\\n                    </a>\\n                    <p class=\\\"font-size-15 text-muted mt-3\\\">Responsive <b>Bootstrap 5</b> Admin Dashboard</p>\\n                </div>\\n                <div class=\\\"card overflow-hidden\\\">\\n                    <div class=\\\"row g-0\\\">\\n                        <div class=\\\"col-lg-6\\\">\\n                            <div class=\\\"p-lg-5 p-4\\\">\\n\\n                                <div>\\n                                    <h5>Welcome Back !</h5>\\n                                    <p class=\\\"text-muted\\\">Sign in to continue to Samply.</p>\\n                                </div>\\n\\n                                <div class=\\\"mt-4 pt-3\\\">\\n                                    <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                                        <div class=\\\"mb-3\\\">\\n                                            <label for=\\\"email\\\" class=\\\"fw-semibold\\\">Email</label>\\n                                            <input type=\\\"text\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\"\\n                                                placeholder=\\\"Enter email\\\"\\n                                                [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\">\\n                                            <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\n                                                <div *ngIf=\\\"f.email.errors.required\\\">Email is required</div>\\n                                                <div *ngIf=\\\"f.email.errors.email\\\">Email must be a valid email address\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n\\n                                        <div class=\\\"mb-3 mb-4\\\">\\n                                            <label for=\\\"userpassword\\\" class=\\\"fw-semibold\\\">Password</label>\\n                                            <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\"\\n                                                id=\\\"userpassword\\\" placeholder=\\\"Enter password\\\"\\n                                                [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\">\\n                                            <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\n                                                <div *ngIf=\\\"f.email.errors.required\\\">Password is required</div>\\n                                            </div>\\n                                        </div>\\n\\n                                        <div class=\\\"row align-items-center\\\">\\n                                            <div class=\\\"col-6\\\">\\n                                                <div class=\\\"form-check\\\">\\n                                                    <input type=\\\"checkbox\\\" class=\\\"form-check-input font-size-16\\\"\\n                                                        id=\\\"remember-check\\\">\\n                                                    <label class=\\\"form-check-label\\\" for=\\\"remember-check\\\">Remember\\n                                                        me</label>\\n                                                </div>\\n                                            </div>\\n                                            <div class=\\\"col-6\\\">\\n                                                <div class=\\\"text-end\\\">\\n                                                    <button class=\\\"btn btn-primary w-md waves-effect waves-light\\\"\\n                                                        type=\\\"submit\\\">Log In</button>\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n\\n                                        <div class=\\\"mt-4\\\">\\n                                            <a routerLink=\\\"/account/recoverpwd\\\" class=\\\"text-muted\\\"><i\\n                                                    class=\\\"mdi mdi-lock me-1\\\"></i> Forgot your password?</a>\\n                                        </div>\\n                                    </form>\\n                                </div>\\n\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"col-lg-6\\\">\\n                            <div class=\\\"p-lg-5 p-4 bg-auth h-100 d-none d-lg-block\\\">\\n                                <div class=\\\"bg-overlay\\\"></div>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                </div>\\n                <!-- end card -->\\n                <div class=\\\"mt-5 text-center\\\">\\n                    <p>Don't have an account ? <a routerLink=\\\"/account/register1\\\"\\n                            class=\\\"fw-semibold text-decoration-underline text-primary\\\"> Sign up </a> </p>\\n                    <p>© {{year}} <b>Samply</b>. Crafted with <i class=\\\"mdi mdi-heart text-danger\\\"></i> by Pichforest\\n                    </p>\\n                </div>\\n            </div>\\n            <!-- end col -->\\n        </div>\\n        <!-- end row -->\\n    </div>\\n    <!-- end container -->\\n</div>\\n<!-- end account page -->\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZWdpc3Rlci5jb21wb25lbnQuc2NzcyJ9 */\";"],"sourceRoot":"webpack:///"}